

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 10 14:33:41 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  001424                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for main@F2498
    64  001424  0001               	dw	1
    65  001426  0000               	dw	0
    66  001428  0000               	dw	0
    67                           
    68                           ;initializer for main@F2496
    69  00142A  0001               	dw	1
    70  00142C  0000               	dw	0
    71  00142E  0000               	dw	0
    72                           
    73                           ;initializer for _timer
    74  001430  20                 	db	32
    75  001431  3A                 	db	58
    76  001432  20                 	db	32
    77  001433  20                 	db	32
    78  001434  20                 	db	32
    79  001435  20                 	db	32
    80  001436  20                 	db	32
    81  001437  20                 	db	32
    82  001438  20                 	db	32
    83  001439  20                 	db	32
    84  00143A  20                 	db	32
    85  00143B  20                 	db	32
    86  00143C  20                 	db	32
    87  00143D  3A                 	db	58
    88  00143E  20                 	db	32
    89  00143F  20                 	db	32
    90  001440  00                 	db	0
    91  0000                     _ADRESL	set	4035
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _PORTD	set	3971
    95  0000                     _ADCON0	set	4034
    96  0000                     _TRISA	set	3986
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADCON1	set	4033
    99  0000                     _PORTEbits	set	3972
   100  0000                     _TRISE	set	3990
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISC	set	3988
   103  0000                     _TRISB	set	3987
   104                           
   105                           	psect	smallconst
   106  001000                     __psmallconst:
   107                           	callstack 0
   108  001000  00                 	db	0
   109  001001                     STR_3:
   110  001001  6B                 	db	107	;'k'
   111  001002  6F                 	db	111	;'o'
   112  001003  6E                 	db	110	;'n'
   113  001004  69                 	db	105	;'i'
   114  001005  65                 	db	101	;'e'
   115  001006  63                 	db	99	;'c'
   116  001007  20                 	db	32
   117  001008  63                 	db	99	;'c'
   118  001009  7A                 	db	122	;'z'
   119  00100A  61                 	db	97	;'a'
   120  00100B  73                 	db	115	;'s'
   121  00100C  75                 	db	117	;'u'
   122  00100D  21                 	db	33
   123  00100E  20                 	db	32
   124  00100F  20                 	db	32
   125  001010  20                 	db	32
   126  001011  00                 	db	0
   127  001012                     STR_1:
   128  001012  47                 	db	71	;'G'
   129  001013  52                 	db	82	;'R'
   130  001014  41                 	db	65	;'A'
   131  001015  43                 	db	67	;'C'
   132  001016  5A                 	db	90	;'Z'
   133  001017  20                 	db	32
   134  001018  31                 	db	49	;'1'
   135  001019  20                 	db	32
   136  00101A  20                 	db	32
   137  00101B  47                 	db	71	;'G'
   138  00101C  52                 	db	82	;'R'
   139  00101D  41                 	db	65	;'A'
   140  00101E  43                 	db	67	;'C'
   141  00101F  5A                 	db	90	;'Z'
   142  001020  20                 	db	32
   143  001021  32                 	db	50	;'2'
   144  001022  00                 	db	0
   145  001023                     STR_2:
   146  001023  47                 	db	71	;'G'
   147  001024  72                 	db	114	;'r'
   148  001025  61                 	db	97	;'a'
   149  001026  63                 	db	99	;'c'
   150  001027  7A                 	db	122	;'z'
   151  001028  20                 	db	32
   152  001029  31                 	db	49	;'1'
   153  00102A  20                 	db	32
   154  00102B  70                 	db	112	;'p'
   155  00102C  72                 	db	114	;'r'
   156  00102D  7A                 	db	122	;'z'
   157  00102E  65                 	db	101	;'e'
   158  00102F  67                 	db	103	;'g'
   159  001030  72                 	db	114	;'r'
   160  001031  61                 	db	97	;'a'
   161  001032  6C                 	db	108	;'l'
   162  001033  00                 	db	0
   163  001034                     STR_4:
   164  001034  47                 	db	71	;'G'
   165  001035  72                 	db	114	;'r'
   166  001036  61                 	db	97	;'a'
   167  001037  63                 	db	99	;'c'
   168  001038  7A                 	db	122	;'z'
   169  001039  20                 	db	32
   170  00103A  32                 	db	50	;'2'
   171  00103B  20                 	db	32
   172  00103C  70                 	db	112	;'p'
   173  00103D  72                 	db	114	;'r'
   174  00103E  7A                 	db	122	;'z'
   175  00103F  65                 	db	101	;'e'
   176  001040  67                 	db	103	;'g'
   177  001041  72                 	db	114	;'r'
   178  001042  61                 	db	97	;'a'
   179  001043  6C                 	db	108	;'l'
   180  001044  00                 	db	0
   181  001045  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186  0013FA                     __pcinit:
   187                           	callstack 0
   188  0013FA                     start_initialization:
   189                           	callstack 0
   190  0013FA                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to COMRAM (29 bytes)
   194                           ; load TBLPTR registers with __pidataCOMRAM
   195  0013FA  0E24               	movlw	low __pidataCOMRAM
   196  0013FC  6EF6               	movwf	tblptrl,c
   197  0013FE  0E14               	movlw	high __pidataCOMRAM
   198  001400  6EF7               	movwf	tblptrh,c
   199  001402  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   200  001404  6EF8               	movwf	tblptru,c
   201  001406  EE00  F001         	lfsr	0,__pdataCOMRAM
   202  00140A  EE10 F01D          	lfsr	1,29
   203  00140E                     copy_data0:
   204  00140E  0009               	tblrd		*+
   205  001410  CFF5 FFEE          	movff	tablat,postinc0
   206  001414  50E5               	movf	postdec1,w,c
   207  001416  50E1               	movf	fsr1l,w,c
   208  001418  E1FA               	bnz	copy_data0
   209  00141A                     end_of_initialization:
   210                           	callstack 0
   211  00141A                     __end_of__initialization:
   212                           	callstack 0
   213  00141A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   214  00141C  6EF8               	movwf	tblptru,c
   215  00141E  0100               	movlb	0
   216  001420  EF23  F008         	goto	_main	;jump to C main() function
   217                           
   218                           	psect	dataCOMRAM
   219  000001                     __pdataCOMRAM:
   220                           	callstack 0
   221  000001                     main@F2498:
   222                           	callstack 0
   223  000001                     	ds	6
   224  000007                     main@F2496:
   225                           	callstack 0
   226  000007                     	ds	6
   227  00000D                     _timer:
   228                           	callstack 0
   229  00000D                     	ds	17
   230                           
   231                           	psect	cstackCOMRAM
   232  00001E                     __pcstackCOMRAM:
   233                           	callstack 0
   234  00001E                     lcd_wr@val:
   235                           	callstack 0
   236  00001E                     delay@ms:
   237                           	callstack 0
   238  00001E                     set_timer@time_p0:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x0
   242  00001E                     	ds	1
   243  00001F                     lcd_cmd@val:
   244                           	callstack 0
   245  00001F                     lcd_dat@val:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x1
   249  00001F                     	ds	1
   250  000020                     delay@i:
   251                           	callstack 0
   252  000020                     lcd_str@str:
   253                           	callstack 0
   254  000020                     set_timer@time_p1:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x2
   258  000020                     	ds	2
   259  000022                     ??_lcd_str:
   260  000022                     delay@j:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x4
   264  000022                     	ds	1
   265  000023                     
   266                           ; 1 bytes @ 0x5
   267  000023                     	ds	1
   268  000024                     lcd_str@i:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x6
   272  000024                     	ds	1
   273  000025                     main@turn:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x7
   277  000025                     	ds	2
   278  000027                     main@running:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x9
   282  000027                     	ds	2
   283  000029                     main@time_p0:
   284                           	callstack 0
   285                           
   286                           ; 6 bytes @ 0xB
   287  000029                     	ds	6
   288  00002F                     main@time_p1:
   289                           	callstack 0
   290                           
   291                           ; 6 bytes @ 0x11
   292  00002F                     	ds	6
   293                           
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 172 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  time_p1         6   17[COMRAM] int [3]
   304 ;;  time_p0         6   11[COMRAM] int [3]
   305 ;;  running         2    9[COMRAM] unsigned int 
   306 ;;  turn            2    7[COMRAM] unsigned int 
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;Total ram usage:       16 bytes
   321 ;; Hardware stack levels required when called: 3
   322 ;; This function calls:
   323 ;;		_delay
   324 ;;		_lcd_cmd
   325 ;;		_lcd_init
   326 ;;		_lcd_str
   327 ;;		_set_timer
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text0
   334  001046                     __ptext0:
   335                           	callstack 0
   336  001046                     _main:
   337                           	callstack 28
   338  001046                     
   339                           ;main.c: 175:     ADCON0=0x01;
   340  001046  0E01               	movlw	1
   341  001048  6EC2               	movwf	194,c	;volatile
   342                           
   343                           ;main.c: 176:     ADCON1=0x0B;
   344  00104A  0E0B               	movlw	11
   345  00104C  6EC1               	movwf	193,c	;volatile
   346                           
   347                           ;main.c: 177:     ADCON2=0x01;
   348  00104E  0E01               	movlw	1
   349  001050  6EC0               	movwf	192,c	;volatile
   350                           
   351                           ;main.c: 179:     TRISA=0xC3;
   352  001052  0EC3               	movlw	195
   353  001054  6E92               	movwf	146,c	;volatile
   354                           
   355                           ;main.c: 180:     TRISB=0x3F;
   356  001056  0E3F               	movlw	63
   357  001058  6E93               	movwf	147,c	;volatile
   358                           
   359                           ;main.c: 181:     TRISC=0x01;
   360  00105A  0E01               	movlw	1
   361  00105C  6E94               	movwf	148,c	;volatile
   362                           
   363                           ;main.c: 182:     TRISD=0x00;
   364  00105E  0E00               	movlw	0
   365  001060  6E95               	movwf	149,c	;volatile
   366                           
   367                           ;main.c: 183:     TRISE=0x00;
   368  001062  0E00               	movlw	0
   369  001064  6E96               	movwf	150,c	;volatile
   370  001066                     
   371                           ;main.c: 185:     lcd_init();
   372  001066  ECAB  F009         	call	_lcd_init	;wreg free
   373  00106A                     
   374                           ;main.c: 186:     lcd_cmd(0x01);
   375  00106A  0E01               	movlw	1
   376  00106C  EC2A  F00A         	call	_lcd_cmd
   377  001070                     
   378                           ;main.c: 188:     unsigned int running = 0;
   379  001070  0E00               	movlw	0
   380  001072  6E28               	movwf	(main@running+1)^0,c
   381  001074  0E00               	movlw	0
   382  001076  6E27               	movwf	main@running^0,c
   383  001078                     
   384                           ;main.c: 189:     unsigned int turn = 0;
   385  001078  0E00               	movlw	0
   386  00107A  6E26               	movwf	(main@turn+1)^0,c
   387  00107C  0E00               	movlw	0
   388  00107E  6E25               	movwf	main@turn^0,c
   389  001080                     
   390                           ;main.c: 190:     int time_p0[] = {1,0,0};
   391  001080  EE20  F007         	lfsr	2,main@F2496
   392  001084  EE10  F029         	lfsr	1,main@time_p0
   393  001088  0E05               	movlw	5
   394  00108A                     u221:
   395  00108A  CFDB FFE3          	movff	plusw2,plusw1
   396  00108E  06E8               	decf	wreg,f,c
   397  001090  E2FC               	bc	u221
   398  001092                     
   399                           ;main.c: 191:     int time_p1[] = {1,0,0};
   400  001092  EE20  F001         	lfsr	2,main@F2498
   401  001096  EE10  F02F         	lfsr	1,main@time_p1
   402  00109A  0E05               	movlw	5
   403  00109C                     u231:
   404  00109C  CFDB FFE3          	movff	plusw2,plusw1
   405  0010A0  06E8               	decf	wreg,f,c
   406  0010A2  E2FC               	bc	u231
   407  0010A4                     
   408                           ;main.c: 193:     set_timer(time_p0, time_p1);
   409  0010A4  0E29               	movlw	low main@time_p0
   410  0010A6  6E1E               	movwf	set_timer@time_p0^0,c
   411  0010A8  0E00               	movlw	high main@time_p0
   412  0010AA  6E1F               	movwf	(set_timer@time_p0+1)^0,c
   413  0010AC  0E2F               	movlw	low main@time_p1
   414  0010AE  6E20               	movwf	set_timer@time_p1^0,c
   415  0010B0  0E00               	movlw	high main@time_p1
   416  0010B2  6E21               	movwf	(set_timer@time_p1+1)^0,c
   417  0010B4  EC78  F009         	call	_set_timer	;wreg free
   418  0010B8                     
   419                           ;main.c: 195:     lcd_cmd(0x80);
   420  0010B8  0E80               	movlw	128
   421  0010BA  EC2A  F00A         	call	_lcd_cmd
   422  0010BE                     
   423                           ;main.c: 196:     lcd_str("GRACZ 1  GRACZ 2");
   424  0010BE  0E12               	movlw	low STR_1
   425  0010C0  6E20               	movwf	lcd_str@str^0,c
   426  0010C2  0E10               	movlw	high STR_1
   427  0010C4  6E21               	movwf	(lcd_str@str+1)^0,c
   428  0010C6  EC3A  F009         	call	_lcd_str	;wreg free
   429  0010CA                     
   430                           ;main.c: 197:     lcd_cmd(0xC0);
   431  0010CA  0EC0               	movlw	192
   432  0010CC  EC2A  F00A         	call	_lcd_cmd
   433  0010D0                     
   434                           ;main.c: 198:     lcd_str(timer);
   435  0010D0  0E0D               	movlw	low _timer
   436  0010D2  6E20               	movwf	lcd_str@str^0,c
   437  0010D4  0E00               	movlw	high _timer
   438  0010D6  6E21               	movwf	(lcd_str@str+1)^0,c
   439  0010D8  EC3A  F009         	call	_lcd_str	;wreg free
   440  0010DC                     l1020:
   441                           
   442                           ;main.c: 203:     {;main.c: 204:         if (running == 0){
   443  0010DC  5027               	movf	main@running^0,w,c
   444  0010DE  1028               	iorwf	(main@running+1)^0,w,c
   445  0010E0  A4D8               	btfss	status,2,c
   446  0010E2  EF75  F008         	goto	u241
   447  0010E6  EF77  F008         	goto	u240
   448  0010EA                     u241:
   449  0010EA  EF26  F009         	goto	l1072
   450  0010EE                     u240:
   451  0010EE                     
   452                           ;main.c: 205:             if (turn == 0){
   453  0010EE  5025               	movf	main@turn^0,w,c
   454  0010F0  1026               	iorwf	(main@turn+1)^0,w,c
   455  0010F2  A4D8               	btfss	status,2,c
   456  0010F4  EF7E  F008         	goto	u251
   457  0010F8  EF80  F008         	goto	u250
   458  0010FC                     u251:
   459  0010FC  EFD6  F008         	goto	l1048
   460  001100                     u250:
   461  001100                     
   462                           ;main.c: 206:                 if (time_p0[2] == 0){
   463  001100  502D               	movf	(main@time_p0+4)^0,w,c
   464  001102  102E               	iorwf	(main@time_p0+5)^0,w,c
   465  001104  A4D8               	btfss	status,2,c
   466  001106  EF87  F008         	goto	u261
   467  00110A  EF89  F008         	goto	u260
   468  00110E                     u261:
   469  00110E  EFCE  F008         	goto	l1046
   470  001112                     u260:
   471  001112                     
   472                           ;main.c: 207:                     if (time_p0[1] == 0){
   473  001112  502B               	movf	(main@time_p0+2)^0,w,c
   474  001114  102C               	iorwf	(main@time_p0+3)^0,w,c
   475  001116  A4D8               	btfss	status,2,c
   476  001118  EF90  F008         	goto	u271
   477  00111C  EF92  F008         	goto	u270
   478  001120                     u271:
   479  001120  EFC6  F008         	goto	l1044
   480  001124                     u270:
   481  001124                     
   482                           ;main.c: 208:                         if (time_p0[0] == 0){
   483  001124  5029               	movf	main@time_p0^0,w,c
   484  001126  102A               	iorwf	(main@time_p0+1)^0,w,c
   485  001128  A4D8               	btfss	status,2,c
   486  00112A  EF99  F008         	goto	u281
   487  00112E  EF9B  F008         	goto	u280
   488  001132                     u281:
   489  001132  EFB6  F008         	goto	l1038
   490  001136                     u280:
   491  001136                     
   492                           ;main.c: 209:                             lcd_cmd(0x01);
   493  001136  0E01               	movlw	1
   494  001138  EC2A  F00A         	call	_lcd_cmd
   495                           
   496                           ;main.c: 210:                             lcd_cmd(0x80);
   497  00113C  0E80               	movlw	128
   498  00113E  EC2A  F00A         	call	_lcd_cmd
   499  001142                     
   500                           ;main.c: 211:                             lcd_str("Gracz 1 przegral");
   501  001142  0E23               	movlw	low STR_2
   502  001144  6E20               	movwf	lcd_str@str^0,c
   503  001146  0E10               	movlw	high STR_2
   504  001148  6E21               	movwf	(lcd_str@str+1)^0,c
   505  00114A  EC3A  F009         	call	_lcd_str	;wreg free
   506  00114E                     
   507                           ;main.c: 212:                             lcd_cmd(0xC0);
   508  00114E  0EC0               	movlw	192
   509  001150  EC2A  F00A         	call	_lcd_cmd
   510                           
   511                           ;main.c: 213:                             lcd_str("koniec czasu!   ");
   512  001154  0E01               	movlw	low STR_3
   513  001156  6E20               	movwf	lcd_str@str^0,c
   514  001158  0E10               	movlw	high STR_3
   515  00115A  6E21               	movwf	(lcd_str@str+1)^0,c
   516  00115C  EC3A  F009         	call	_lcd_str	;wreg free
   517  001160                     l1036:
   518                           
   519                           ;main.c: 214:                             running = 0;
   520  001160  0E00               	movlw	0
   521  001162  6E28               	movwf	(main@running+1)^0,c
   522  001164  0E00               	movlw	0
   523  001166  6E27               	movwf	main@running^0,c
   524                           
   525                           ;main.c: 215:                         } else {
   526  001168  EF26  F009         	goto	l1072
   527  00116C                     l1038:
   528                           
   529                           ;main.c: 216:                             time_p0[0] = time_p0[0] - 1;
   530  00116C  0EFF               	movlw	255
   531  00116E  2429               	addwf	main@time_p0^0,w,c
   532  001170  6E29               	movwf	main@time_p0^0,c
   533  001172  0EFF               	movlw	255
   534  001174  202A               	addwfc	(main@time_p0+1)^0,w,c
   535  001176  6E2A               	movwf	(main@time_p0+1)^0,c
   536  001178                     
   537                           ;main.c: 217:                             time_p0[1] = 5;
   538  001178  0E00               	movlw	0
   539  00117A  6E2C               	movwf	(main@time_p0+3)^0,c
   540  00117C  0E05               	movlw	5
   541  00117E  6E2B               	movwf	(main@time_p0+2)^0,c
   542  001180                     
   543                           ;main.c: 218:                             time_p0[2] = 9;
   544  001180  0E00               	movlw	0
   545  001182  6E2E               	movwf	(main@time_p0+5)^0,c
   546  001184  0E09               	movlw	9
   547  001186  6E2D               	movwf	(main@time_p0+4)^0,c
   548  001188  EF26  F009         	goto	l1072
   549  00118C                     l1044:
   550                           
   551                           ;main.c: 221:                         time_p0[1] = time_p0[1] - 1;
   552  00118C  0EFF               	movlw	255
   553  00118E  242B               	addwf	(main@time_p0+2)^0,w,c
   554  001190  6E2B               	movwf	(main@time_p0+2)^0,c
   555  001192  0EFF               	movlw	255
   556  001194  202C               	addwfc	(main@time_p0+3)^0,w,c
   557  001196  6E2C               	movwf	(main@time_p0+3)^0,c
   558  001198  EF26  F009         	goto	l1072
   559  00119C                     l1046:
   560                           
   561                           ;main.c: 224:                     time_p0[2] = time_p0[2] - 1;
   562  00119C  0EFF               	movlw	255
   563  00119E  242D               	addwf	(main@time_p0+4)^0,w,c
   564  0011A0  6E2D               	movwf	(main@time_p0+4)^0,c
   565  0011A2  0EFF               	movlw	255
   566  0011A4  202E               	addwfc	(main@time_p0+5)^0,w,c
   567  0011A6  6E2E               	movwf	(main@time_p0+5)^0,c
   568  0011A8  EF26  F009         	goto	l1072
   569  0011AC                     l1048:
   570                           
   571                           ;main.c: 227:                 if (time_p1[2] == 0){
   572  0011AC  5033               	movf	(main@time_p1+4)^0,w,c
   573  0011AE  1034               	iorwf	(main@time_p1+5)^0,w,c
   574  0011B0  A4D8               	btfss	status,2,c
   575  0011B2  EFDD  F008         	goto	u291
   576  0011B6  EFDF  F008         	goto	u290
   577  0011BA                     u291:
   578  0011BA  EF20  F009         	goto	l1070
   579  0011BE                     u290:
   580  0011BE                     
   581                           ;main.c: 228:                     if (time_p1[1] == 0){
   582  0011BE  5031               	movf	(main@time_p1+2)^0,w,c
   583  0011C0  1032               	iorwf	(main@time_p1+3)^0,w,c
   584  0011C2  A4D8               	btfss	status,2,c
   585  0011C4  EFE6  F008         	goto	u301
   586  0011C8  EFE8  F008         	goto	u300
   587  0011CC                     u301:
   588  0011CC  EF18  F009         	goto	l1068
   589  0011D0                     u300:
   590  0011D0                     
   591                           ;main.c: 229:                         if (time_p1[0] == 0){
   592  0011D0  502F               	movf	main@time_p1^0,w,c
   593  0011D2  1030               	iorwf	(main@time_p1+1)^0,w,c
   594  0011D4  A4D8               	btfss	status,2,c
   595  0011D6  EFEF  F008         	goto	u311
   596  0011DA  EFF1  F008         	goto	u310
   597  0011DE                     u311:
   598  0011DE  EF08  F009         	goto	l1062
   599  0011E2                     u310:
   600  0011E2                     
   601                           ;main.c: 230:                             lcd_cmd(0x01);
   602  0011E2  0E01               	movlw	1
   603  0011E4  EC2A  F00A         	call	_lcd_cmd
   604                           
   605                           ;main.c: 231:                             lcd_cmd(0x80);
   606  0011E8  0E80               	movlw	128
   607  0011EA  EC2A  F00A         	call	_lcd_cmd
   608  0011EE                     
   609                           ;main.c: 232:                             lcd_str("Gracz 2 przegral");
   610  0011EE  0E34               	movlw	low STR_4
   611  0011F0  6E20               	movwf	lcd_str@str^0,c
   612  0011F2  0E10               	movlw	high STR_4
   613  0011F4  6E21               	movwf	(lcd_str@str+1)^0,c
   614  0011F6  EC3A  F009         	call	_lcd_str	;wreg free
   615  0011FA                     
   616                           ;main.c: 233:                             lcd_cmd(0xC0);
   617  0011FA  0EC0               	movlw	192
   618  0011FC  EC2A  F00A         	call	_lcd_cmd
   619                           
   620                           ;main.c: 234:                             lcd_str("koniec czasu!   ");
   621  001200  0E01               	movlw	low STR_3
   622  001202  6E20               	movwf	lcd_str@str^0,c
   623  001204  0E10               	movlw	high STR_3
   624  001206  6E21               	movwf	(lcd_str@str+1)^0,c
   625  001208  EC3A  F009         	call	_lcd_str	;wreg free
   626  00120C  EFB0  F008         	goto	l1036
   627  001210                     l1062:
   628                           
   629                           ;main.c: 237:                             time_p1[0] = time_p1[0] - 1;
   630  001210  0EFF               	movlw	255
   631  001212  242F               	addwf	main@time_p1^0,w,c
   632  001214  6E2F               	movwf	main@time_p1^0,c
   633  001216  0EFF               	movlw	255
   634  001218  2030               	addwfc	(main@time_p1+1)^0,w,c
   635  00121A  6E30               	movwf	(main@time_p1+1)^0,c
   636  00121C                     
   637                           ;main.c: 238:                             time_p1[1] = 5;
   638  00121C  0E00               	movlw	0
   639  00121E  6E32               	movwf	(main@time_p1+3)^0,c
   640  001220  0E05               	movlw	5
   641  001222  6E31               	movwf	(main@time_p1+2)^0,c
   642  001224                     
   643                           ;main.c: 239:                             time_p1[2] = 9;
   644  001224  0E00               	movlw	0
   645  001226  6E34               	movwf	(main@time_p1+5)^0,c
   646  001228  0E09               	movlw	9
   647  00122A  6E33               	movwf	(main@time_p1+4)^0,c
   648  00122C  EF26  F009         	goto	l1072
   649  001230                     l1068:
   650                           
   651                           ;main.c: 242:                         time_p1[1] = time_p1[1] - 1;
   652  001230  0EFF               	movlw	255
   653  001232  2431               	addwf	(main@time_p1+2)^0,w,c
   654  001234  6E31               	movwf	(main@time_p1+2)^0,c
   655  001236  0EFF               	movlw	255
   656  001238  2032               	addwfc	(main@time_p1+3)^0,w,c
   657  00123A  6E32               	movwf	(main@time_p1+3)^0,c
   658  00123C  EF26  F009         	goto	l1072
   659  001240                     l1070:
   660                           
   661                           ;main.c: 245:                     time_p1[2] = time_p1[2] - 1;
   662  001240  0EFF               	movlw	255
   663  001242  2433               	addwf	(main@time_p1+4)^0,w,c
   664  001244  6E33               	movwf	(main@time_p1+4)^0,c
   665  001246  0EFF               	movlw	255
   666  001248  2034               	addwfc	(main@time_p1+5)^0,w,c
   667  00124A  6E34               	movwf	(main@time_p1+5)^0,c
   668  00124C                     l1072:
   669                           
   670                           ;main.c: 251:        delay(1000);
   671  00124C  0E03               	movlw	3
   672  00124E  6E1F               	movwf	(delay@ms+1)^0,c
   673  001250  0EE8               	movlw	232
   674  001252  6E1E               	movwf	delay@ms^0,c
   675  001254  ECD9  F009         	call	_delay	;wreg free
   676  001258                     
   677                           ;main.c: 252:        set_timer(time_p0, time_p1);
   678  001258  0E29               	movlw	low main@time_p0
   679  00125A  6E1E               	movwf	set_timer@time_p0^0,c
   680  00125C  0E00               	movlw	high main@time_p0
   681  00125E  6E1F               	movwf	(set_timer@time_p0+1)^0,c
   682  001260  0E2F               	movlw	low main@time_p1
   683  001262  6E20               	movwf	set_timer@time_p1^0,c
   684  001264  0E00               	movlw	high main@time_p1
   685  001266  6E21               	movwf	(set_timer@time_p1+1)^0,c
   686  001268  EC78  F009         	call	_set_timer	;wreg free
   687  00126C  EF6E  F008         	goto	l1020
   688  001270  EF00  F000         	goto	start
   689  001274                     __end_of_main:
   690                           	callstack 0
   691                           
   692 ;; *************** function _set_timer *****************
   693 ;; Defined at:
   694 ;;		line 164 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  time_p0         2    0[COMRAM] PTR int 
   697 ;;		 -> main@time_p0(6), 
   698 ;;  time_p1         2    2[COMRAM] PTR int 
   699 ;;		 -> main@time_p1(6), 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        4 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text1
   725  0012F0                     __ptext1:
   726                           	callstack 0
   727  0012F0                     _set_timer:
   728                           	callstack 30
   729  0012F0                     
   730                           ;main.c: 165:     timer[0] = time_p0[0] + '0';
   731  0012F0  C01E  FFD9         	movff	set_timer@time_p0,fsr2l
   732  0012F4  C01F  FFDA         	movff	set_timer@time_p0+1,fsr2h
   733  0012F8  50DF               	movf	indf2,w,c
   734  0012FA  0F30               	addlw	48
   735  0012FC  6E0D               	movwf	_timer^0,c
   736                           
   737                           ;main.c: 166:     timer[2] = time_p0[1] + '0';
   738  0012FE  EE20 F002          	lfsr	2,2
   739  001302  501E               	movf	set_timer@time_p0^0,w,c
   740  001304  26D9               	addwf	fsr2l,f,c
   741  001306  501F               	movf	(set_timer@time_p0+1)^0,w,c
   742  001308  22DA               	addwfc	fsr2h,f,c
   743  00130A  50DF               	movf	indf2,w,c
   744  00130C  0F30               	addlw	48
   745  00130E  6E0F               	movwf	(_timer+2)^0,c
   746                           
   747                           ;main.c: 167:     timer[3] = time_p0[2] + '0';
   748  001310  EE20 F004          	lfsr	2,4
   749  001314  501E               	movf	set_timer@time_p0^0,w,c
   750  001316  26D9               	addwf	fsr2l,f,c
   751  001318  501F               	movf	(set_timer@time_p0+1)^0,w,c
   752  00131A  22DA               	addwfc	fsr2h,f,c
   753  00131C  50DF               	movf	indf2,w,c
   754  00131E  0F30               	addlw	48
   755  001320  6E10               	movwf	(_timer+3)^0,c
   756                           
   757                           ;main.c: 168:     timer[12] = time_p1[0] + '0';
   758  001322  C020  FFD9         	movff	set_timer@time_p1,fsr2l
   759  001326  C021  FFDA         	movff	set_timer@time_p1+1,fsr2h
   760  00132A  50DF               	movf	indf2,w,c
   761  00132C  0F30               	addlw	48
   762  00132E  6E19               	movwf	(_timer+12)^0,c
   763                           
   764                           ;main.c: 169:     timer[14] = time_p1[1] + '0';
   765  001330  EE20 F002          	lfsr	2,2
   766  001334  5020               	movf	set_timer@time_p1^0,w,c
   767  001336  26D9               	addwf	fsr2l,f,c
   768  001338  5021               	movf	(set_timer@time_p1+1)^0,w,c
   769  00133A  22DA               	addwfc	fsr2h,f,c
   770  00133C  50DF               	movf	indf2,w,c
   771  00133E  0F30               	addlw	48
   772  001340  6E1B               	movwf	(_timer+14)^0,c
   773                           
   774                           ;main.c: 170:     timer[15] = time_p1[2] + '0';
   775  001342  EE20 F004          	lfsr	2,4
   776  001346  5020               	movf	set_timer@time_p1^0,w,c
   777  001348  26D9               	addwf	fsr2l,f,c
   778  00134A  5021               	movf	(set_timer@time_p1+1)^0,w,c
   779  00134C  22DA               	addwfc	fsr2h,f,c
   780  00134E  50DF               	movf	indf2,w,c
   781  001350  0F30               	addlw	48
   782  001352  6E1C               	movwf	(_timer+15)^0,c
   783  001354  0012               	return		;funcret
   784  001356                     __end_of_set_timer:
   785                           	callstack 0
   786                           
   787 ;; *************** function _lcd_str *****************
   788 ;; Defined at:
   789 ;;		line 152 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  str             2    2[COMRAM] PTR const unsigned char 
   792 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
   793 ;;		 -> STR_1(17), timer(17), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  i               1    6[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;Total ram usage:        5 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 2
   812 ;; This function calls:
   813 ;;		_lcd_dat
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text2
   820  001274                     __ptext2:
   821                           	callstack 0
   822  001274                     _lcd_str:
   823                           	callstack 28
   824  001274                     
   825                           ;main.c: 152: void lcd_str(const char* str);main.c: 153: {;main.c: 154:  unsigned char i
      +                          =0;
   826  001274  0E00               	movlw	0
   827  001276  6E24               	movwf	lcd_str@i^0,c
   828                           
   829                           ;main.c: 156:  while(str[i] != 0 )
   830  001278  EF58  F009         	goto	l992
   831  00127C                     l988:
   832                           
   833                           ;main.c: 157:  {;main.c: 158:    lcd_dat(str[i]);
   834  00127C  5024               	movf	lcd_str@i^0,w,c
   835  00127E  2420               	addwf	lcd_str@str^0,w,c
   836  001280  6E22               	movwf	??_lcd_str^0,c
   837  001282  0E00               	movlw	0
   838  001284  2021               	addwfc	(lcd_str@str+1)^0,w,c
   839  001286  6E23               	movwf	(??_lcd_str+1)^0,c
   840  001288  C022  FFF6         	movff	??_lcd_str,tblptrl
   841  00128C  C023  FFF7         	movff	??_lcd_str+1,tblptrh
   842  001290  0E00               	movlw	low (__smallconst shr (0+16))
   843  001292  6EF8               	movwf	tblptru,c
   844  001294  0E0F               	movlw	(high __ramtop+-1)
   845  001296  64F7               	cpfsgt	tblptrh,c
   846  001298  D003               	bra	u197
   847  00129A  0008               	tblrd		*
   848  00129C  50F5               	movf	tablat,w,c
   849  00129E  D005               	bra	u190
   850  0012A0                     u197:
   851  0012A0  CFF6 FFE9          	movff	tblptrl,fsr0l
   852  0012A4  CFF7 FFEA          	movff	tblptrh,fsr0h
   853  0012A8  50EF               	movf	indf0,w,c
   854  0012AA                     u190:
   855  0012AA  EC21  F00A         	call	_lcd_dat
   856  0012AE                     
   857                           ;main.c: 159:    i++;
   858  0012AE  2A24               	incf	lcd_str@i^0,f,c
   859  0012B0                     l992:
   860                           
   861                           ;main.c: 156:  while(str[i] != 0 )
   862  0012B0  5024               	movf	lcd_str@i^0,w,c
   863  0012B2  2420               	addwf	lcd_str@str^0,w,c
   864  0012B4  6E22               	movwf	??_lcd_str^0,c
   865  0012B6  0E00               	movlw	0
   866  0012B8  2021               	addwfc	(lcd_str@str+1)^0,w,c
   867  0012BA  6E23               	movwf	(??_lcd_str+1)^0,c
   868  0012BC  C022  FFF6         	movff	??_lcd_str,tblptrl
   869  0012C0  C023  FFF7         	movff	??_lcd_str+1,tblptrh
   870  0012C4  0E00               	movlw	low (__smallconst shr (0+16))
   871  0012C6  6EF8               	movwf	tblptru,c
   872  0012C8  0E0F               	movlw	(high __ramtop+-1)
   873  0012CA  64F7               	cpfsgt	tblptrh,c
   874  0012CC  D003               	bra	u207
   875  0012CE  0008               	tblrd		*
   876  0012D0  50F5               	movf	tablat,w,c
   877  0012D2  D005               	bra	u200
   878  0012D4                     u207:
   879  0012D4  CFF6 FFE9          	movff	tblptrl,fsr0l
   880  0012D8  CFF7 FFEA          	movff	tblptrh,fsr0h
   881  0012DC  50EF               	movf	indf0,w,c
   882  0012DE                     u200:
   883  0012DE  0900               	iorlw	0
   884  0012E0  A4D8               	btfss	status,2,c
   885  0012E2  EF75  F009         	goto	u211
   886  0012E6  EF77  F009         	goto	u210
   887  0012EA                     u211:
   888  0012EA  EF3E  F009         	goto	l988
   889  0012EE                     u210:
   890  0012EE  0012               	return		;funcret
   891  0012F0                     __end_of_lcd_str:
   892                           	callstack 0
   893                           
   894 ;; *************** function _lcd_dat *****************
   895 ;; Defined at:
   896 ;;		line 122 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  val             1    wreg     unsigned char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  val             1    1[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        1 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 1
   917 ;; This function calls:
   918 ;;		_lcd_wr
   919 ;; This function is called by:
   920 ;;		_lcd_str
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text3
   925  001442                     __ptext3:
   926                           	callstack 0
   927  001442                     _lcd_dat:
   928                           	callstack 28
   929                           
   930                           ;incstack = 0
   931                           ;lcd_dat@val stored from wreg
   932  001442  6E1F               	movwf	lcd_dat@val^0,c
   933  001444                     
   934                           ;main.c: 122: void lcd_dat(unsigned char val);main.c: 123: {;main.c: 124:  PORTEbits.RE1
      +                          =1;
   935  001444  8284               	bsf	132,1,c	;volatile
   936  001446                     
   937                           ;main.c: 125:         lcd_wr(val);
   938  001446  501F               	movf	lcd_dat@val^0,w,c
   939  001448  EC33  F00A         	call	_lcd_wr
   940  00144C                     
   941                           ;main.c: 126:         PORTEbits.RE2=1;
   942  00144C  8484               	bsf	132,2,c	;volatile
   943  00144E                     
   944                           ;main.c: 128:         PORTEbits.RE1=0;
   945  00144E  9284               	bcf	132,1,c	;volatile
   946  001450                     
   947                           ;main.c: 130:  PORTEbits.RE1=1;
   948  001450  8284               	bsf	132,1,c	;volatile
   949  001452  0012               	return		;funcret
   950  001454                     __end_of_lcd_dat:
   951                           	callstack 0
   952                           
   953 ;; *************** function _lcd_init *****************
   954 ;; Defined at:
   955 ;;		line 133 in file "main.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 2
   976 ;; This function calls:
   977 ;;		_delay
   978 ;;		_lcd_cmd
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text4
   985  001356                     __ptext4:
   986                           	callstack 0
   987  001356                     _lcd_init:
   988                           	callstack 28
   989  001356                     
   990                           ;main.c: 135:  PORTEbits.RE1=0;
   991  001356  9284               	bcf	132,1,c	;volatile
   992                           
   993                           ;main.c: 136:  PORTEbits.RE2=0;
   994  001358  9484               	bcf	132,2,c	;volatile
   995  00135A                     
   996                           ;main.c: 137:  delay(20);
   997  00135A  0E00               	movlw	0
   998  00135C  6E1F               	movwf	(delay@ms+1)^0,c
   999  00135E  0E14               	movlw	20
  1000  001360  6E1E               	movwf	delay@ms^0,c
  1001  001362  ECD9  F009         	call	_delay	;wreg free
  1002  001366                     
  1003                           ;main.c: 138:  PORTEbits.RE1=1;
  1004  001366  8284               	bsf	132,1,c	;volatile
  1005  001368                     
  1006                           ;main.c: 140:  lcd_cmd(0x38);
  1007  001368  0E38               	movlw	56
  1008  00136A  EC2A  F00A         	call	_lcd_cmd
  1009  00136E                     
  1010                           ;main.c: 141:  delay(5);
  1011  00136E  0E00               	movlw	0
  1012  001370  6E1F               	movwf	(delay@ms+1)^0,c
  1013  001372  0E05               	movlw	5
  1014  001374  6E1E               	movwf	delay@ms^0,c
  1015  001376  ECD9  F009         	call	_delay	;wreg free
  1016                           
  1017                           ;main.c: 142:  lcd_cmd(0x38);
  1018  00137A  0E38               	movlw	56
  1019  00137C  EC2A  F00A         	call	_lcd_cmd
  1020  001380                     
  1021                           ;main.c: 143:         delay(1);
  1022  001380  0E00               	movlw	0
  1023  001382  6E1F               	movwf	(delay@ms+1)^0,c
  1024  001384  0E01               	movlw	1
  1025  001386  6E1E               	movwf	delay@ms^0,c
  1026  001388  ECD9  F009         	call	_delay	;wreg free
  1027  00138C                     
  1028                           ;main.c: 144:  lcd_cmd(0x38);
  1029  00138C  0E38               	movlw	56
  1030  00138E  EC2A  F00A         	call	_lcd_cmd
  1031  001392                     
  1032                           ;main.c: 145:  lcd_cmd(0x08);
  1033  001392  0E08               	movlw	8
  1034  001394  EC2A  F00A         	call	_lcd_cmd
  1035  001398                     
  1036                           ;main.c: 146:  lcd_cmd(0x0F);
  1037  001398  0E0F               	movlw	15
  1038  00139A  EC2A  F00A         	call	_lcd_cmd
  1039  00139E                     
  1040                           ;main.c: 147:  lcd_cmd(0x01);
  1041  00139E  0E01               	movlw	1
  1042  0013A0  EC2A  F00A         	call	_lcd_cmd
  1043  0013A4                     
  1044                           ;main.c: 148:  lcd_cmd(0x38);
  1045  0013A4  0E38               	movlw	56
  1046  0013A6  EC2A  F00A         	call	_lcd_cmd
  1047  0013AA                     
  1048                           ;main.c: 149:         lcd_cmd(0x80);
  1049  0013AA  0E80               	movlw	128
  1050  0013AC  EC2A  F00A         	call	_lcd_cmd
  1051  0013B0  0012               	return		;funcret
  1052  0013B2                     __end_of_lcd_init:
  1053                           	callstack 0
  1054                           
  1055 ;; *************** function _lcd_cmd *****************
  1056 ;; Defined at:
  1057 ;;		line 111 in file "main.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  val             1    wreg     unsigned char 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  val             1    1[COMRAM] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;Total ram usage:        1 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 1
  1078 ;; This function calls:
  1079 ;;		_lcd_wr
  1080 ;; This function is called by:
  1081 ;;		_lcd_init
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text5
  1087  001454                     __ptext5:
  1088                           	callstack 0
  1089  001454                     _lcd_cmd:
  1090                           	callstack 28
  1091                           
  1092                           ;incstack = 0
  1093                           ;lcd_cmd@val stored from wreg
  1094  001454  6E1F               	movwf	lcd_cmd@val^0,c
  1095  001456                     
  1096                           ;main.c: 111: void lcd_cmd(unsigned char val);main.c: 112: {;main.c: 113:  PORTEbits.RE1
      +                          =1;
  1097  001456  8284               	bsf	132,1,c	;volatile
  1098  001458                     
  1099                           ;main.c: 114:         lcd_wr(val);
  1100  001458  501F               	movf	lcd_cmd@val^0,w,c
  1101  00145A  EC33  F00A         	call	_lcd_wr
  1102  00145E                     
  1103                           ;main.c: 115:         PORTEbits.RE2=0;
  1104  00145E  9484               	bcf	132,2,c	;volatile
  1105  001460                     
  1106                           ;main.c: 117:         PORTEbits.RE1=0;
  1107  001460  9284               	bcf	132,1,c	;volatile
  1108  001462                     
  1109                           ;main.c: 119:  PORTEbits.RE1=1;
  1110  001462  8284               	bsf	132,1,c	;volatile
  1111  001464  0012               	return		;funcret
  1112  001466                     __end_of_lcd_cmd:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function _lcd_wr *****************
  1116 ;; Defined at:
  1117 ;;		line 106 in file "main.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  val             1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  val             1    0[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        1 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_lcd_cmd
  1141 ;;		_lcd_dat
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text6
  1146  001466                     __ptext6:
  1147                           	callstack 0
  1148  001466                     _lcd_wr:
  1149                           	callstack 28
  1150                           
  1151                           ;incstack = 0
  1152                           ;lcd_wr@val stored from wreg
  1153  001466  6E1E               	movwf	lcd_wr@val^0,c
  1154  001468                     
  1155                           ;main.c: 106: void lcd_wr(unsigned char val);main.c: 107: {;main.c: 108:   PORTD=val;
  1156  001468  C01E  FF83         	movff	lcd_wr@val,3971	;volatile
  1157  00146C  0012               	return		;funcret
  1158  00146E                     __end_of_lcd_wr:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _delay *****************
  1162 ;; Defined at:
  1163 ;;		line 72 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  ms              2    0[COMRAM] unsigned int 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  i               2    2[COMRAM] unsigned int 
  1168 ;;  j               1    4[COMRAM] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;Total ram usage:        5 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_lcd_init
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text7
  1193  0013B2                     __ptext7:
  1194                           	callstack 0
  1195  0013B2                     _delay:
  1196                           	callstack 29
  1197  0013B2                     
  1198                           ;main.c: 72: void delay(unsigned int ms);main.c: 73: {;main.c: 74:     unsigned int i;;m
      +                          ain.c: 75:     unsigned char j;;main.c: 77:  for (i =0; i< ms; i++)
  1199  0013B2  0E00               	movlw	0
  1200  0013B4  6E21               	movwf	(delay@i+1)^0,c
  1201  0013B6  0E00               	movlw	0
  1202  0013B8  6E20               	movwf	delay@i^0,c
  1203  0013BA  EFF1  F009         	goto	l960
  1204  0013BE                     l948:
  1205                           
  1206                           ;main.c: 78:  {;main.c: 80:   for (j =0 ; j < 200; j++)
  1207  0013BE  0E00               	movlw	0
  1208  0013C0  6E22               	movwf	delay@j^0,c
  1209  0013C2                     l33:
  1210                           
  1211                           ;main.c: 81:    {;main.c: 82:       __nop();
  1212  0013C2  F000               	nop	
  1213                           
  1214                           ;main.c: 83:       __nop();
  1215  0013C4  F000               	nop	
  1216                           
  1217                           ;main.c: 84:       __nop();
  1218  0013C6  F000               	nop	
  1219                           
  1220                           ;main.c: 85:       __nop();
  1221  0013C8  F000               	nop	
  1222                           
  1223                           ;main.c: 86:       __nop();
  1224  0013CA  F000               	nop	
  1225  0013CC                     
  1226                           ;main.c: 87:    }
  1227  0013CC  2A22               	incf	delay@j^0,f,c
  1228  0013CE  0EC7               	movlw	199
  1229  0013D0  6422               	cpfsgt	delay@j^0,c
  1230  0013D2  EFED  F009         	goto	u171
  1231  0013D6  EFEF  F009         	goto	u170
  1232  0013DA                     u171:
  1233  0013DA  EFE1  F009         	goto	l33
  1234  0013DE                     u170:
  1235  0013DE                     
  1236                           ;main.c: 88:  }
  1237  0013DE  4A20               	infsnz	delay@i^0,f,c
  1238  0013E0  2A21               	incf	(delay@i+1)^0,f,c
  1239  0013E2                     l960:
  1240  0013E2  501E               	movf	delay@ms^0,w,c
  1241  0013E4  5C20               	subwf	delay@i^0,w,c
  1242  0013E6  501F               	movf	(delay@ms+1)^0,w,c
  1243  0013E8  5821               	subwfb	(delay@i+1)^0,w,c
  1244  0013EA  A0D8               	btfss	status,0,c
  1245  0013EC  EFFA  F009         	goto	u181
  1246  0013F0  EFFC  F009         	goto	u180
  1247  0013F4                     u181:
  1248  0013F4  EFDF  F009         	goto	l948
  1249  0013F8                     u180:
  1250  0013F8  0012               	return		;funcret
  1251  0013FA                     __end_of_delay:
  1252                           	callstack 0
  1253                           
  1254                           	psect	rparam
  1255  0000                     
  1256                           	psect	idloc
  1257                           
  1258                           ;Config register IDLOC0 @ 0x200000
  1259                           ;	unspecified, using default values
  1260  200000                     	org	2097152
  1261  200000  FF                 	db	255
  1262                           
  1263                           ;Config register IDLOC1 @ 0x200001
  1264                           ;	unspecified, using default values
  1265  200001                     	org	2097153
  1266  200001  FF                 	db	255
  1267                           
  1268                           ;Config register IDLOC2 @ 0x200002
  1269                           ;	unspecified, using default values
  1270  200002                     	org	2097154
  1271  200002  FF                 	db	255
  1272                           
  1273                           ;Config register IDLOC3 @ 0x200003
  1274                           ;	unspecified, using default values
  1275  200003                     	org	2097155
  1276  200003  FF                 	db	255
  1277                           
  1278                           ;Config register IDLOC4 @ 0x200004
  1279                           ;	unspecified, using default values
  1280  200004                     	org	2097156
  1281  200004  FF                 	db	255
  1282                           
  1283                           ;Config register IDLOC5 @ 0x200005
  1284                           ;	unspecified, using default values
  1285  200005                     	org	2097157
  1286  200005  FF                 	db	255
  1287                           
  1288                           ;Config register IDLOC6 @ 0x200006
  1289                           ;	unspecified, using default values
  1290  200006                     	org	2097158
  1291  200006  FF                 	db	255
  1292                           
  1293                           ;Config register IDLOC7 @ 0x200007
  1294                           ;	unspecified, using default values
  1295  200007                     	org	2097159
  1296  200007  FF                 	db	255
  1297                           
  1298                           	psect	config
  1299                           
  1300                           ; Padding undefined space
  1301  300000                     	org	3145728
  1302  300000  FF                 	db	255
  1303                           
  1304                           ;Config register CONFIG1H @ 0x300001
  1305                           ;	Oscillator Selection bits
  1306                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1307                           ;	Fail-Safe Clock Monitor Enable bit
  1308                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1309                           ;	Internal/External Oscillator Switchover bit
  1310                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1311  300001                     	org	3145729
  1312  300001  06                 	db	6
  1313                           
  1314                           ;Config register CONFIG2L @ 0x300002
  1315                           ;	Power-up Timer Enable bit
  1316                           ;	PWRT = ON, PWRT enabled
  1317                           ;	Brown-out Reset Enable bits
  1318                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1319                           ;	Brown Out Reset Voltage bits
  1320                           ;	BORV = 3, Minimum setting
  1321  300002                     	org	3145730
  1322  300002  18                 	db	24
  1323                           
  1324                           ;Config register CONFIG2H @ 0x300003
  1325                           ;	Watchdog Timer Enable bit
  1326                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1327                           ;	Watchdog Timer Postscale Select bits
  1328                           ;	WDTPS = 32768, 1:32768
  1329  300003                     	org	3145731
  1330  300003  1E                 	db	30
  1331                           
  1332                           ; Padding undefined space
  1333  300004                     	org	3145732
  1334  300004  FF                 	db	255
  1335                           
  1336                           ;Config register CONFIG3H @ 0x300005
  1337                           ;	CCP2 MUX bit
  1338                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1339                           ;	PORTB A/D Enable bit
  1340                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1341                           ;	Low-Power Timer1 Oscillator Enable bit
  1342                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1343                           ;	MCLR Pin Enable bit
  1344                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1345  300005                     	org	3145733
  1346  300005  81                 	db	129
  1347                           
  1348                           ;Config register CONFIG4L @ 0x300006
  1349                           ;	Stack Full/Underflow Reset Enable bit
  1350                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1351                           ;	Single-Supply ICSP Enable bit
  1352                           ;	LVP = OFF, Single-Supply ICSP disabled
  1353                           ;	Extended Instruction Set Enable bit
  1354                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1355                           ;	Background Debugger Enable bit
  1356                           ;	DEBUG = 0x1, unprogrammed default
  1357  300006                     	org	3145734
  1358  300006  80                 	db	128
  1359                           
  1360                           ; Padding undefined space
  1361  300007                     	org	3145735
  1362  300007  FF                 	db	255
  1363                           
  1364                           ;Config register CONFIG5L @ 0x300008
  1365                           ;	Code Protection bit
  1366                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1367                           ;	Code Protection bit
  1368                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1369                           ;	Code Protection bit
  1370                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1371                           ;	Code Protection bit
  1372                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1373  300008                     	org	3145736
  1374  300008  0F                 	db	15
  1375                           
  1376                           ;Config register CONFIG5H @ 0x300009
  1377                           ;	Boot Block Code Protection bit
  1378                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1379                           ;	Data EEPROM Code Protection bit
  1380                           ;	CPD = OFF, Data EEPROM not code-protected
  1381  300009                     	org	3145737
  1382  300009  C0                 	db	192
  1383                           
  1384                           ;Config register CONFIG6L @ 0x30000A
  1385                           ;	Write Protection bit
  1386                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1387                           ;	Write Protection bit
  1388                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1389                           ;	Write Protection bit
  1390                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1391                           ;	Write Protection bit
  1392                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1393  30000A                     	org	3145738
  1394  30000A  0F                 	db	15
  1395                           
  1396                           ;Config register CONFIG6H @ 0x30000B
  1397                           ;	Configuration Register Write Protection bit
  1398                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1399                           ;	Boot Block Write Protection bit
  1400                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1401                           ;	Data EEPROM Write Protection bit
  1402                           ;	WRTD = OFF, Data EEPROM not write-protected
  1403  30000B                     	org	3145739
  1404  30000B  E0                 	db	224
  1405                           
  1406                           ;Config register CONFIG7L @ 0x30000C
  1407                           ;	Table Read Protection bit
  1408                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1409                           ;	Table Read Protection bit
  1410                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1411                           ;	Table Read Protection bit
  1412                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1413                           ;	Table Read Protection bit
  1414                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1415  30000C                     	org	3145740
  1416  30000C  0F                 	db	15
  1417                           
  1418                           ;Config register CONFIG7H @ 0x30000D
  1419                           ;	Boot Block Table Read Protection bit
  1420                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1421  30000D                     	org	3145741
  1422  30000D  40                 	db	64
  1423                           tosu	equ	0xFFF
  1424                           tosh	equ	0xFFE
  1425                           tosl	equ	0xFFD
  1426                           stkptr	equ	0xFFC
  1427                           pclatu	equ	0xFFB
  1428                           pclath	equ	0xFFA
  1429                           pcl	equ	0xFF9
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           prodh	equ	0xFF4
  1435                           prodl	equ	0xFF3
  1436                           indf0	equ	0xFEF
  1437                           postinc0	equ	0xFEE
  1438                           postdec0	equ	0xFED
  1439                           preinc0	equ	0xFEC
  1440                           plusw0	equ	0xFEB
  1441                           fsr0h	equ	0xFEA
  1442                           fsr0l	equ	0xFE9
  1443                           wreg	equ	0xFE8
  1444                           indf1	equ	0xFE7
  1445                           postinc1	equ	0xFE6
  1446                           postdec1	equ	0xFE5
  1447                           preinc1	equ	0xFE4
  1448                           plusw1	equ	0xFE3
  1449                           fsr1h	equ	0xFE2
  1450                           fsr1l	equ	0xFE1
  1451                           bsr	equ	0xFE0
  1452                           indf2	equ	0xFDF
  1453                           postinc2	equ	0xFDE
  1454                           postdec2	equ	0xFDD
  1455                           preinc2	equ	0xFDC
  1456                           plusw2	equ	0xFDB
  1457                           fsr2h	equ	0xFDA
  1458                           fsr2l	equ	0xFD9
  1459                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        29
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      52
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    set_timer@time_p1	PTR int  size(2) Largest target is 6
		 -> main@time_p1(COMRAM[6]), 

    set_timer@time_p0	PTR int  size(2) Largest target is 6
		 -> main@time_p0(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), timer(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_delay
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    2474
                                              7 COMRAM    16    16      0
                              _delay
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                          _set_timer
 ---------------------------------------------------------------------------------
 (1) _set_timer                                            4     0      4     436
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     576
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     426
                              _delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     396
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _delay
     _lcd_cmd
   _lcd_str
     _lcd_dat
       _lcd_wr
   _set_timer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      34       1       40.9%
BITBIGSFRhh         3B      0       0      37        0.0%
BITBIGSFRlhh        29      0       0      38        0.0%
BITBIGSFRlhl         D      0       0      39        0.0%
BITBIGSFRll          3      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      26        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 10 14:33:41 2022

                     l33 13C2                       l50 146C                       l36 13F8  
                     l53 1464                       l70 1354                       l56 1452  
                     l65 12EE                       l59 13B0                      l800 1462  
                    l810 1450                      l802 1444                      l804 1446  
                    l806 144C                      l808 144E                      l774 1468  
                    l960 13E2                      l792 1456                      l954 13CC  
                    l946 13B2                      l794 1458                      l970 136E  
                    l962 1356                      l956 13CE                      l948 13BE  
                    l796 145E                      l980 139E                      l972 1380  
                    l964 135A                      l958 13DE                      l798 1460  
                    l982 13A4                      l974 138C                      l966 1366  
                    l990 12AE                      l984 13AA                      l976 1392  
                    l968 1368                      l992 12B0                      l978 1398  
                    l986 1274                      l994 12F0                      l988 127C  
                    l996 1046                      l998 1066                      u200 12DE  
                    u210 12EE                      u211 12EA                      u300 11D0  
                    u301 11CC                      u221 108A                      u310 11E2  
                    u207 12D4                      u311 11DE                      u231 109C  
                    u240 10EE                      u241 10EA                      u170 13DE  
                    u250 1100                      u171 13DA                      u251 10FC  
                    u180 13F8                      u260 1112                      u181 13F4  
                    u261 110E                      u190 12AA                      u270 1124  
                    u271 1120                      u280 1136                      u281 1132  
                    u290 11BE                      u291 11BA                      u197 12A0  
                    wreg 000FE8                     l1000 106A                     l1010 10A4  
                   l1002 1070                     l1020 10DC                     l1012 10B8  
                   l1004 1078                     l1030 1136                     l1022 10EE  
                   l1014 10BE                     l1006 1080                     l1040 1178  
                   l1032 1142                     l1024 1100                     l1016 10CA  
                   l1008 1092                     l1050 11BE                     l1042 1180  
                   l1034 114E                     l1026 1112                     l1018 10D0  
                   l1052 11D0                     l1036 1160                     l1028 1124  
                   l1044 118C                     l1054 11E2                     l1062 1210  
                   l1070 1240                     l1038 116C                     l1046 119C  
                   l1064 121C                     l1056 11EE                     l1048 11AC  
                   l1072 124C                     l1074 1258                     l1066 1224  
                   l1058 11FA                     l1068 1230                     STR_1 1012  
                   STR_2 1023                     STR_3 1001                     STR_4 1034  
                   STR_5 1001                     _main 1046                     fsr0h 000FEA  
            main@time_p0 0029              main@time_p1 002F                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
            main@running 0027             ___param_bank 000000                    ?_main 001E  
                  _PORTD 000F83                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcd_dat 1454          __end_of_lcd_cmd 1466          __end_of_lcd_str 12F0  
                  _delay 13B2                    _timer 000D                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
        __initialization 13FA             __end_of_main 1274                   ??_main 0025  
          __activetblptr 000002                   ?_delay 001E                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         __end_of_lcd_init 13B2                   _lcd_wr 1466  
                 delay@i 0020                   delay@j 0022                   isa$std 000001  
              ??_lcd_dat 001F                ??_lcd_cmd 001F                ??_lcd_str 0022  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 141A            ___rparam_used 000001           __pcstackCOMRAM 001E  
          __end_of_delay 13FA                  ??_delay 0020                  ?_lcd_wr 001E  
              ?_lcd_init 001E                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 13FA                  __ramtop 1000  
                __ptext0 1046                  __ptext1 12F0                  __ptext2 1274  
                __ptext3 1442                  __ptext4 1356                  __ptext5 1454  
                __ptext6 1466                  __ptext7 13B2                  _lcd_dat 1442  
                _lcd_cmd 1454                  _lcd_str 1274                  delay@ms 001E  
             ??_lcd_init 0023     end_of_initialization 141A            __Lmediumconst 0000  
      __end_of_set_timer 1356                  postdec1 000FE5                  postinc0 000FEE  
              _PORTEbits 000F84               lcd_dat@val 001F               lcd_cmd@val 001F  
             lcd_str@str 0020         set_timer@time_p0 001E         set_timer@time_p1 0020  
          __pidataCOMRAM 1424           __end_of_lcd_wr 146E      start_initialization 13FA  
               ??_lcd_wr 001E                 ?_lcd_dat 001E                 ?_lcd_cmd 001E  
               ?_lcd_str 0020              __smallconst 1000                _set_timer 12F0  
              main@F2496 0007                main@F2498 0001               _ADCON0bits 000FC2  
              lcd_wr@val 001E                copy_data0 140E                 __Hrparam 0000  
               __Lrparam 0000               ?_set_timer 001E                 _lcd_init 1356  
               isa$xinst 000000                 lcd_str@i 0024                 main@turn 0025  
            ??_set_timer 0022  
