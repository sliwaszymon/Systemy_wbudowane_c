

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 10 11:04:42 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  00F8D8                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for main@F2504
    64  00F8D8  1B                 	db	27
    65  00F8D9  1B                 	db	27
    66  00F8DA  1B                 	db	27
    67  00F8DB  00                 	db	0
    68  00F8DC  00                 	db	0
    69  00F8DD  00                 	db	0
    70  00F8DE  00                 	db	0
    71  00F8DF  00                 	db	0
    72                           
    73                           ;initializer for main@F2502
    74  00F8E0  00                 	db	0
    75  00F8E1  0A                 	db	10
    76  00F8E2  0A                 	db	10
    77  00F8E3  0A                 	db	10
    78  00F8E4  00                 	db	0
    79  00F8E5  0E                 	db	14
    80  00F8E6  11                 	db	17
    81  00F8E7  00                 	db	0
    82                           
    83                           ;initializer for main@F2500
    84  00F8E8  00                 	db	0
    85  00F8E9  0A                 	db	10
    86  00F8EA  0A                 	db	10
    87  00F8EB  0A                 	db	10
    88  00F8EC  00                 	db	0
    89  00F8ED  11                 	db	17
    90  00F8EE  0E                 	db	14
    91  00F8EF  00                 	db	0
    92                           
    93                           ;initializer for main@F2498
    94  00F8F0  04                 	db	4
    95  00F8F1  04                 	db	4
    96  00F8F2  0E                 	db	14
    97  00F8F3  0A                 	db	10
    98  00F8F4  0A                 	db	10
    99  00F8F5  0A                 	db	10
   100  00F8F6  0A                 	db	10
   101  00F8F7  0E                 	db	14
   102                           
   103                           ;initializer for main@F2496
   104  00F8F8  04                 	db	4
   105  00F8F9  04                 	db	4
   106  00F8FA  0E                 	db	14
   107  00F8FB  0A                 	db	10
   108  00F8FC  0A                 	db	10
   109  00F8FD  0E                 	db	14
   110  00F8FE  0E                 	db	14
   111  00F8FF  0E                 	db	14
   112                           
   113                           ;initializer for main@F2494
   114  00F900  04                 	db	4
   115  00F901  04                 	db	4
   116  00F902  0E                 	db	14
   117  00F903  0E                 	db	14
   118  00F904  0E                 	db	14
   119  00F905  0E                 	db	14
   120  00F906  0E                 	db	14
   121  00F907  0E                 	db	14
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADRESH	set	4036
   124  0000                     _ADCON0bits	set	4034
   125  0000                     _PORTD	set	3971
   126  0000                     _ADCON0	set	4034
   127  0000                     _TRISA	set	3986
   128  0000                     _ADCON2	set	4032
   129  0000                     _ADCON1	set	4033
   130  0000                     _PORTEbits	set	3972
   131  0000                     _TRISE	set	3990
   132  0000                     _TRISD	set	3989
   133  0000                     _TRISC	set	3988
   134  0000                     _TRISB	set	3987
   135                           
   136                           	psect	mediumconst
   137  00FECC                     __pmediumconst:
   138                           	callstack 0
   139  00FECC  00                 	db	0
   140  00FECD                     STR_5:
   141  00FECD  20                 	db	32
   142  00FECE  20                 	db	32
   143  00FECF  47                 	db	71	;'G'
   144  00FED0  75                 	db	117	;'u'
   145  00FED1  6C                 	db	108	;'l'
   146  00FED2  21                 	db	33
   147  00FED3  20                 	db	32
   148  00FED4  20                 	db	32
   149  00FED5  20                 	db	32
   150  00FED6  20                 	db	32
   151  00FED7  20                 	db	32
   152  00FED8  20                 	db	32
   153  00FED9  20                 	db	32
   154  00FEDA  20                 	db	32
   155  00FEDB  20                 	db	32
   156  00FEDC  20                 	db	32
   157  00FEDD  00                 	db	0
   158  00FEDE                     STR_10:
   159  00FEDE  70                 	db	112	;'p'
   160  00FEDF  72                 	db	114	;'r'
   161  00FEE0  6F                 	db	111	;'o'
   162  00FEE1  62                 	db	98	;'b'
   163  00FEE2  6C                 	db	108	;'l'
   164  00FEE3  65                 	db	101	;'e'
   165  00FEE4  6D                 	db	109	;'m'
   166  00FEE5  21                 	db	33
   167  00FEE6  20                 	db	32
   168  00FEE7  20                 	db	32
   169  00FEE8  20                 	db	32
   170  00FEE9  20                 	db	32
   171  00FEEA  20                 	db	32
   172  00FEEB  20                 	db	32
   173  00FEEC  20                 	db	32
   174  00FEED  20                 	db	32
   175  00FEEE  00                 	db	0
   176  00FEEF                     STR_6:
   177  00FEEF  20                 	db	32
   178  00FEF0  20                 	db	32
   179  00FEF1  20                 	db	32
   180  00FEF2  20                 	db	32
   181  00FEF3  20                 	db	32
   182  00FEF4  20                 	db	32
   183  00FEF5  47                 	db	71	;'G'
   184  00FEF6  75                 	db	117	;'u'
   185  00FEF7  6C                 	db	108	;'l'
   186  00FEF8  21                 	db	33
   187  00FEF9  20                 	db	32
   188  00FEFA  20                 	db	32
   189  00FEFB  20                 	db	32
   190  00FEFC  20                 	db	32
   191  00FEFD  20                 	db	32
   192  00FEFE  20                 	db	32
   193  00FEFF  00                 	db	0
   194  00FF00                     STR_12:
   195  00FF00  70                 	db	112	;'p'
   196  00FF01  72                 	db	114	;'r'
   197  00FF02  6F                 	db	111	;'o'
   198  00FF03  68                 	db	104	;'h'
   199  00FF04  69                 	db	105	;'i'
   200  00FF05  62                 	db	98	;'b'
   201  00FF06  69                 	db	105	;'i'
   202  00FF07  63                 	db	99	;'c'
   203  00FF08  6A                 	db	106	;'j'
   204  00FF09  65                 	db	101	;'e'
   205  00FF0A  21                 	db	33
   206  00FF0B  20                 	db	32
   207  00FF0C  20                 	db	32
   208  00FF0D  20                 	db	32
   209  00FF0E  20                 	db	32
   210  00FF0F  20                 	db	32
   211  00FF10  00                 	db	0
   212  00FF11                     STR_16:
   213  00FF11  20                 	db	32
   214  00FF12  20                 	db	32
   215  00FF13  20                 	db	32
   216  00FF14  50                 	db	80	;'P'
   217  00FF15  4F                 	db	79	;'O'
   218  00FF16  52                 	db	82	;'R'
   219  00FF17  4F                 	db	79	;'O'
   220  00FF18  42                 	db	66	;'B'
   221  00FF19  20                 	db	32
   222  00FF1A  53                 	db	83	;'S'
   223  00FF1B  49                 	db	73	;'I'
   224  00FF1C  45                 	db	69	;'E'
   225  00FF1D  21                 	db	33
   226  00FF1E  20                 	db	32
   227  00FF1F  20                 	db	32
   228  00FF20  20                 	db	32
   229  00FF21  00                 	db	0
   230  00FF22                     STR_4:
   231  00FF22  20                 	db	32
   232  00FF23  20                 	db	32
   233  00FF24  73                 	db	115	;'s'
   234  00FF25  69                 	db	105	;'i'
   235  00FF26  65                 	db	101	;'e'
   236  00FF27  20                 	db	32
   237  00FF28  6B                 	db	107	;'k'
   238  00FF29  6F                 	db	111	;'o'
   239  00FF2A  6E                 	db	110	;'n'
   240  00FF2B  63                 	db	99	;'c'
   241  00FF2C  7A                 	db	122	;'z'
   242  00FF2D  79                 	db	121	;'y'
   243  00FF2E  3F                 	db	63	;'?'
   244  00FF2F  20                 	db	32
   245  00FF30  20                 	db	32
   246  00FF31  20                 	db	32
   247  00FF32  00                 	db	0
   248  00FF33                     STR_14:
   249  00FF33  20                 	db	32
   250  00FF34  20                 	db	32
   251  00FF35  20                 	db	32
   252  00FF36  4C                 	db	76	;'L'
   253  00FF37  55                 	db	85	;'U'
   254  00FF38  42                 	db	66	;'B'
   255  00FF39  20                 	db	32
   256  00FF3A  43                 	db	67	;'C'
   257  00FF3B  49                 	db	73	;'I'
   258  00FF3C  20                 	db	32
   259  00FF3D  5A                 	db	90	;'Z'
   260  00FF3E  4C                 	db	76	;'L'
   261  00FF3F  45                 	db	69	;'E'
   262  00FF40  20                 	db	32
   263  00FF41  20                 	db	32
   264  00FF42  20                 	db	32
   265  00FF43  00                 	db	0
   266  00FF44                     STR_7:
   267  00FF44  20                 	db	32
   268  00FF45  20                 	db	32
   269  00FF46  20                 	db	32
   270  00FF47  20                 	db	32
   271  00FF48  20                 	db	32
   272  00FF49  20                 	db	32
   273  00FF4A  20                 	db	32
   274  00FF4B  20                 	db	32
   275  00FF4C  20                 	db	32
   276  00FF4D  20                 	db	32
   277  00FF4E  47                 	db	71	;'G'
   278  00FF4F  75                 	db	117	;'u'
   279  00FF50  6C                 	db	108	;'l'
   280  00FF51  21                 	db	33
   281  00FF52  20                 	db	32
   282  00FF53  20                 	db	32
   283  00FF54  00                 	db	0
   284  00FF55                     STR_2:
   285  00FF55  20                 	db	32
   286  00FF56  20                 	db	32
   287  00FF57  20                 	db	32
   288  00FF58  4D                 	db	77	;'M'
   289  00FF59  79                 	db	121	;'y'
   290  00FF5A  20                 	db	32
   291  00FF5B  72                 	db	114	;'r'
   292  00FF5C  6F                 	db	111	;'o'
   293  00FF5D  77                 	db	119	;'w'
   294  00FF5E  6E                 	db	110	;'n'
   295  00FF5F  69                 	db	105	;'i'
   296  00FF60  65                 	db	101	;'e'
   297  00FF61  7A                 	db	122	;'z'
   298  00FF62  21                 	db	33
   299  00FF63  20                 	db	32
   300  00FF64  20                 	db	32
   301  00FF65  00                 	db	0
   302  00FF66                     STR_8:
   303  00FF66  20                 	db	32
   304  00FF67  20                 	db	32
   305  00FF68  20                 	db	32
   306  00FF69  4A                 	db	74	;'J'
   307  00FF6A  65                 	db	101	;'e'
   308  00FF6B  73                 	db	115	;'s'
   309  00FF6C  74                 	db	116	;'t'
   310  00FF6D  20                 	db	32
   311  00FF6E  70                 	db	112	;'p'
   312  00FF6F  6F                 	db	111	;'o'
   313  00FF70  20                 	db	32
   314  00FF71  32                 	db	50	;'2'
   315  00FF72  32                 	db	50	;'2'
   316  00FF73  3F                 	db	63	;'?'
   317  00FF74  20                 	db	32
   318  00FF75  20                 	db	32
   319  00FF76  00                 	db	0
   320  00FF77                     STR_9:
   321  00FF77  44                 	db	68	;'D'
   322  00FF78  6C                 	db	108	;'l'
   323  00FF79  61                 	db	97	;'a'
   324  00FF7A  20                 	db	32
   325  00FF7B  6E                 	db	110	;'n'
   326  00FF7C  61                 	db	97	;'a'
   327  00FF7D  73                 	db	115	;'s'
   328  00FF7E  20                 	db	32
   329  00FF7F  74                 	db	116	;'t'
   330  00FF80  6F                 	db	111	;'o'
   331  00FF81  20                 	db	32
   332  00FF82  6E                 	db	110	;'n'
   333  00FF83  69                 	db	105	;'i'
   334  00FF84  65                 	db	101	;'e'
   335  00FF85  20                 	db	32
   336  00FF86  20                 	db	32
   337  00FF87  00                 	db	0
   338  00FF88                     STR_11:
   339  00FF88  4F                 	db	79	;'O'
   340  00FF89  6D                 	db	109	;'m'
   341  00FF8A  69                 	db	105	;'i'
   342  00FF8B  6A                 	db	106	;'j'
   343  00FF8C  61                 	db	97	;'a'
   344  00FF8D  6D                 	db	109	;'m'
   345  00FF8E  79                 	db	121	;'y'
   346  00FF8F  20                 	db	32
   347  00FF90  6C                 	db	108	;'l'
   348  00FF91  75                 	db	117	;'u'
   349  00FF92  6B                 	db	107	;'k'
   350  00FF93  69                 	db	105	;'i'
   351  00FF94  65                 	db	101	;'e'
   352  00FF95  6D                 	db	109	;'m'
   353  00FF96  20                 	db	32
   354  00FF97  20                 	db	32
   355  00FF98  00                 	db	0
   356  00FF99                     STR_1:
   357  00FF99  20                 	db	32
   358  00FF9A  20                 	db	32
   359  00FF9B  4C                 	db	76	;'L'
   360  00FF9C  75                 	db	117	;'u'
   361  00FF9D  62                 	db	98	;'b'
   362  00FF9E  69                 	db	105	;'i'
   363  00FF9F  73                 	db	115	;'s'
   364  00FFA0  7A                 	db	122	;'z'
   365  00FFA1  20                 	db	32
   366  00FFA2  70                 	db	112	;'p'
   367  00FFA3  69                 	db	105	;'i'
   368  00FFA4  77                 	db	119	;'w'
   369  00FFA5  6B                 	db	107	;'k'
   370  00FFA6  6F                 	db	111	;'o'
   371  00FFA7  3F                 	db	63	;'?'
   372  00FFA8  20                 	db	32
   373  00FFA9  00                 	db	0
   374  00FFAA                     STR_17:
   375  00FFAA  20                 	db	32
   376  00FFAB  5A                 	db	90	;'Z'
   377  00FFAC  20                 	db	32
   378  00FFAD  4B                 	db	75	;'K'
   379  00FFAE  4F                 	db	79	;'O'
   380  00FFAF  44                 	db	68	;'D'
   381  00FFB0  45                 	db	69	;'E'
   382  00FFB1  4D                 	db	77	;'M'
   383  00FFB2  20                 	db	32
   384  00FFB3  20                 	db	32
   385  00FFB4  53                 	db	83	;'S'
   386  00FFB5  59                 	db	89	;'Y'
   387  00FFB6  53                 	db	83	;'S'
   388  00FFB7  57                 	db	87	;'W'
   389  00FFB8  42                 	db	66	;'B'
   390  00FFB9  20                 	db	32
   391  00FFBA  00                 	db	0
   392  00FFBB                     STR_15:
   393  00FFBB  20                 	db	32
   394  00FFBC  20                 	db	32
   395  00FFBD  57                 	db	87	;'W'
   396  00FFBE  50                 	db	80	;'P'
   397  00FFBF  41                 	db	65	;'A'
   398  00FFC0  44                 	db	68	;'D'
   399  00FFC1  41                 	db	65	;'A'
   400  00FFC2  4A                 	db	74	;'J'
   401  00FFC3  20                 	db	32
   402  00FFC4  44                 	db	68	;'D'
   403  00FFC5  4F                 	db	79	;'O'
   404  00FFC6  20                 	db	32
   405  00FFC7  4E                 	db	78	;'N'
   406  00FFC8  41                 	db	65	;'A'
   407  00FFC9  53                 	db	83	;'S'
   408  00FFCA  20                 	db	32
   409  00FFCB  00                 	db	0
   410  00FFCC                     STR_3:
   411  00FFCC  20                 	db	32
   412  00FFCD  20                 	db	32
   413  00FFCE  41                 	db	65	;'A'
   414  00FFCF  6C                 	db	108	;'l'
   415  00FFD0  65                 	db	101	;'e'
   416  00FFD1  20                 	db	32
   417  00FFD2  7A                 	db	122	;'z'
   418  00FFD3  61                 	db	97	;'a'
   419  00FFD4  20                 	db	32
   420  00FFD5  73                 	db	115	;'s'
   421  00FFD6  7A                 	db	122	;'z'
   422  00FFD7  79                 	db	121	;'y'
   423  00FFD8  62                 	db	98	;'b'
   424  00FFD9  6B                 	db	107	;'k'
   425  00FFDA  6F                 	db	111	;'o'
   426  00FFDB  20                 	db	32
   427  00FFDC  00                 	db	0
   428  00FFDD                     STR_13:
   429  00FFDD  47                 	db	71	;'G'
   430  00FFDE  44                 	db	68	;'D'
   431  00FFDF  59                 	db	89	;'Y'
   432  00FFE0  20                 	db	32
   433  00FFE1  4A                 	db	74	;'J'
   434  00FFE2  45                 	db	69	;'E'
   435  00FFE3  53                 	db	83	;'S'
   436  00FFE4  54                 	db	84	;'T'
   437  00FFE5  20                 	db	32
   438  00FFE6  57                 	db	87	;'W'
   439  00FFE7  45                 	db	69	;'E'
   440  00FFE8  45                 	db	69	;'E'
   441  00FFE9  4B                 	db	75	;'K'
   442  00FFEA  45                 	db	69	;'E'
   443  00FFEB  4E                 	db	78	;'N'
   444  00FFEC  44                 	db	68	;'D'
   445  00FFED  00                 	db	0
   446  00FFEE                     STR_18:
   447  00FFEE  34                 	db	52	;'4'
   448  00FFEF  20                 	db	32
   449  00FFF0  50                 	db	80	;'P'
   450  00FFF1  52                 	db	82	;'R'
   451  00FFF2  4F                 	db	79	;'O'
   452  00FFF3  43                 	db	67	;'C'
   453  00FFF4  45                 	db	69	;'E'
   454  00FFF5  4E                 	db	78	;'N'
   455  00FFF6  54                 	db	84	;'T'
   456  00FFF7  20                 	db	32
   457  00FFF8  5A                 	db	90	;'Z'
   458  00FFF9  4E                 	db	78	;'N'
   459  00FFFA  49                 	db	73	;'I'
   460  00FFFB  5A                 	db	90	;'Z'
   461  00FFFC  4B                 	db	75	;'K'
   462  00FFFD  49                 	db	73	;'I'
   463  00FFFE  00                 	db	0
   464  00FFFF  00                 	db	0	; dummy byte at the end
   465  0000                     
   466                           ; #config settings
   467                           
   468                           	psect	cinit
   469  00F8AE                     __pcinit:
   470                           	callstack 0
   471  00F8AE                     start_initialization:
   472                           	callstack 0
   473  00F8AE                     __initialization:
   474                           	callstack 0
   475                           
   476                           ; Initialize objects allocated to COMRAM (48 bytes)
   477                           ; load TBLPTR registers with __pidataCOMRAM
   478  00F8AE  0ED8               	movlw	low __pidataCOMRAM
   479  00F8B0  6EF6               	movwf	tblptrl,c
   480  00F8B2  0EF8               	movlw	high __pidataCOMRAM
   481  00F8B4  6EF7               	movwf	tblptrh,c
   482  00F8B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   483  00F8B8  6EF8               	movwf	tblptru,c
   484  00F8BA  EE00  F038         	lfsr	0,__pdataCOMRAM
   485  00F8BE  EE10 F030          	lfsr	1,48
   486  00F8C2                     copy_data0:
   487  00F8C2  0009               	tblrd		*+
   488  00F8C4  CFF5 FFEE          	movff	tablat,postinc0
   489  00F8C8  50E5               	movf	postdec1,w,c
   490  00F8CA  50E1               	movf	fsr1l,w,c
   491  00F8CC  E1FA               	bnz	copy_data0
   492  00F8CE                     end_of_initialization:
   493                           	callstack 0
   494  00F8CE                     __end_of__initialization:
   495                           	callstack 0
   496  00F8CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   497  00F8D0  6EF8               	movwf	tblptru,c
   498  00F8D2  0100               	movlb	0
   499  00F8D4  EF1F  F07D         	goto	_main	;jump to C main() function
   500                           
   501                           	psect	dataCOMRAM
   502  000038                     __pdataCOMRAM:
   503                           	callstack 0
   504  000038                     main@F2504:
   505                           	callstack 0
   506  000038                     	ds	8
   507  000040                     main@F2502:
   508                           	callstack 0
   509  000040                     	ds	8
   510  000048                     main@F2500:
   511                           	callstack 0
   512  000048                     	ds	8
   513  000050                     main@F2498:
   514                           	callstack 0
   515  000050                     	ds	8
   516  000058                     main@F2496:
   517                           	callstack 0
   518  000058                     	ds	8
   519  000060                     main@F2494:
   520                           	callstack 0
   521  000060                     	ds	8
   522                           
   523                           	psect	cstackCOMRAM
   524  000001                     __pcstackCOMRAM:
   525                           	callstack 0
   526  000001                     lcd_wr@val:
   527                           	callstack 0
   528  000001                     delay@ms:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x0
   532  000001                     	ds	1
   533  000002                     lcd_cmd@val:
   534                           	callstack 0
   535  000002                     lcd_dat@val:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x1
   539  000002                     	ds	1
   540  000003                     delay@i:
   541                           	callstack 0
   542  000003                     lcd_str@str:
   543                           	callstack 0
   544  000003                     lcd_custom_char@Pattern:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x2
   548  000003                     	ds	2
   549  000005                     ??_lcd_str:
   550  000005                     delay@j:
   551                           	callstack 0
   552  000005                     lcd_custom_char@Location:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x4
   556  000005                     	ds	1
   557  000006                     lcd_custom_char@i:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x5
   561  000006                     	ds	1
   562  000007                     lcd_str@i:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x6
   566  000007                     	ds	1
   567  000008                     main@full_bottle:
   568                           	callstack 0
   569                           
   570                           ; 8 bytes @ 0x7
   571  000008                     	ds	8
   572  000010                     main@half_bottle:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0xF
   576  000010                     	ds	8
   577  000018                     main@empty_bottle:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x17
   581  000018                     	ds	8
   582  000020                     main@smile:
   583                           	callstack 0
   584                           
   585                           ; 8 bytes @ 0x1F
   586  000020                     	ds	8
   587  000028                     main@sad:
   588                           	callstack 0
   589                           
   590                           ; 8 bytes @ 0x27
   591  000028                     	ds	8
   592  000030                     main@ciapki:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x2F
   596  000030                     	ds	8
   597                           
   598 ;;
   599 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   600 ;;
   601 ;; *************** function _main *****************
   602 ;; Defined at:
   603 ;;		line 171 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  ciapki          8   47[COMRAM] unsigned char [8]
   608 ;;  sad             8   39[COMRAM] unsigned char [8]
   609 ;;  smile           8   31[COMRAM] unsigned char [8]
   610 ;;  empty_bottle    8   23[COMRAM] unsigned char [8]
   611 ;;  half_bottle     8   15[COMRAM] unsigned char [8]
   612 ;;  full_bottle     8    7[COMRAM] unsigned char [8]
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:       48 bytes
   627 ;; Hardware stack levels required when called: 3
   628 ;; This function calls:
   629 ;;		_delay
   630 ;;		_lcd_cmd
   631 ;;		_lcd_custom_char
   632 ;;		_lcd_dat
   633 ;;		_lcd_init
   634 ;;		_lcd_str
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text0
   641  00FA3E                     __ptext0:
   642                           	callstack 0
   643  00FA3E                     _main:
   644                           	callstack 28
   645  00FA3E                     
   646                           ;main.c: 174:     ADCON0=0x01;
   647  00FA3E  0E01               	movlw	1
   648  00FA40  6EC2               	movwf	194,c	;volatile
   649                           
   650                           ;main.c: 175:     ADCON1=0x0B;
   651  00FA42  0E0B               	movlw	11
   652  00FA44  6EC1               	movwf	193,c	;volatile
   653                           
   654                           ;main.c: 176:     ADCON2=0x01;
   655  00FA46  0E01               	movlw	1
   656  00FA48  6EC0               	movwf	192,c	;volatile
   657                           
   658                           ;main.c: 178:     TRISA=0xC3;
   659  00FA4A  0EC3               	movlw	195
   660  00FA4C  6E92               	movwf	146,c	;volatile
   661                           
   662                           ;main.c: 179:     TRISB=0x3F;
   663  00FA4E  0E3F               	movlw	63
   664  00FA50  6E93               	movwf	147,c	;volatile
   665                           
   666                           ;main.c: 180:     TRISC=0x01;
   667  00FA52  0E01               	movlw	1
   668  00FA54  6E94               	movwf	148,c	;volatile
   669                           
   670                           ;main.c: 181:     TRISD=0x00;
   671  00FA56  0E00               	movlw	0
   672  00FA58  6E95               	movwf	149,c	;volatile
   673                           
   674                           ;main.c: 182:     TRISE=0x00;
   675  00FA5A  0E00               	movlw	0
   676  00FA5C  6E96               	movwf	150,c	;volatile
   677  00FA5E                     
   678                           ;main.c: 184:     lcd_init();
   679  00FA5E  ECF1  F07C         	call	_lcd_init	;wreg free
   680  00FA62                     
   681                           ;main.c: 185:     lcd_cmd(0x01);
   682  00FA62  0E01               	movlw	1
   683  00FA64  EC45  F07C         	call	_lcd_cmd
   684  00FA68                     
   685                           ;main.c: 187:     unsigned char full_bottle[]= {0x4,0x4,0xe,0xe,0xe,0xe,0xe,0xe};
   686  00FA68  EE20  F060         	lfsr	2,main@F2494
   687  00FA6C  EE10  F008         	lfsr	1,main@full_bottle
   688  00FA70  0E07               	movlw	7
   689  00FA72                     u161:
   690  00FA72  CFDB FFE3          	movff	plusw2,plusw1
   691  00FA76  06E8               	decf	wreg,f,c
   692  00FA78  E2FC               	bc	u161
   693  00FA7A                     
   694                           ;main.c: 188:     unsigned char half_bottle[]= {0x4,0x4,0xe,0xa,0xa,0xe,0xe,0xe};
   695  00FA7A  EE20  F058         	lfsr	2,main@F2496
   696  00FA7E  EE10  F010         	lfsr	1,main@half_bottle
   697  00FA82  0E07               	movlw	7
   698  00FA84                     u171:
   699  00FA84  CFDB FFE3          	movff	plusw2,plusw1
   700  00FA88  06E8               	decf	wreg,f,c
   701  00FA8A  E2FC               	bc	u171
   702  00FA8C                     
   703                           ;main.c: 189:     unsigned char empty_bottle[]= {0x4,0x4,0xe,0xa,0xa,0xa,0xa,0xe};
   704  00FA8C  EE20  F050         	lfsr	2,main@F2498
   705  00FA90  EE10  F018         	lfsr	1,main@empty_bottle
   706  00FA94  0E07               	movlw	7
   707  00FA96                     u181:
   708  00FA96  CFDB FFE3          	movff	plusw2,plusw1
   709  00FA9A  06E8               	decf	wreg,f,c
   710  00FA9C  E2FC               	bc	u181
   711  00FA9E                     
   712                           ;main.c: 190:     unsigned char smile[]= {0x0,0xa,0xa,0xa,0x0,0x11,0xe,0x0};
   713  00FA9E  EE20  F048         	lfsr	2,main@F2500
   714  00FAA2  EE10  F020         	lfsr	1,main@smile
   715  00FAA6  0E07               	movlw	7
   716  00FAA8                     u191:
   717  00FAA8  CFDB FFE3          	movff	plusw2,plusw1
   718  00FAAC  06E8               	decf	wreg,f,c
   719  00FAAE  E2FC               	bc	u191
   720  00FAB0                     
   721                           ;main.c: 191:     unsigned char sad[] = {0x0,0xa,0xa,0xa,0x0,0xe,0x11,0x0};
   722  00FAB0  EE20  F040         	lfsr	2,main@F2502
   723  00FAB4  EE10  F028         	lfsr	1,main@sad
   724  00FAB8  0E07               	movlw	7
   725  00FABA                     u201:
   726  00FABA  CFDB FFE3          	movff	plusw2,plusw1
   727  00FABE  06E8               	decf	wreg,f,c
   728  00FAC0  E2FC               	bc	u201
   729  00FAC2                     
   730                           ;main.c: 192:     unsigned char ciapki[] = {0x1b,0x1b,0x1b,0x0,0x0,0x0,0x0,0x0};
   731  00FAC2  EE20  F038         	lfsr	2,main@F2504
   732  00FAC6  EE10  F030         	lfsr	1,main@ciapki
   733  00FACA  0E07               	movlw	7
   734  00FACC                     u211:
   735  00FACC  CFDB FFE3          	movff	plusw2,plusw1
   736  00FAD0  06E8               	decf	wreg,f,c
   737  00FAD2  E2FC               	bc	u211
   738  00FAD4                     
   739                           ;main.c: 193:     lcd_custom_char(full_bottle, 0);
   740  00FAD4  0E08               	movlw	low main@full_bottle
   741  00FAD6  6E03               	movwf	lcd_custom_char@Pattern^0,c
   742  00FAD8  0E00               	movlw	high main@full_bottle
   743  00FADA  6E04               	movwf	(lcd_custom_char@Pattern+1)^0,c
   744  00FADC  0E00               	movlw	0
   745  00FADE  6E05               	movwf	lcd_custom_char@Location^0,c
   746  00FAE0  EC84  F07C         	call	_lcd_custom_char	;wreg free
   747  00FAE4                     
   748                           ;main.c: 194:     lcd_custom_char(half_bottle, 1);
   749  00FAE4  0E10               	movlw	low main@half_bottle
   750  00FAE6  6E03               	movwf	lcd_custom_char@Pattern^0,c
   751  00FAE8  0E00               	movlw	high main@half_bottle
   752  00FAEA  6E04               	movwf	(lcd_custom_char@Pattern+1)^0,c
   753  00FAEC  0E01               	movlw	1
   754  00FAEE  6E05               	movwf	lcd_custom_char@Location^0,c
   755  00FAF0  EC84  F07C         	call	_lcd_custom_char	;wreg free
   756  00FAF4                     
   757                           ;main.c: 195:     lcd_custom_char(empty_bottle, 2);
   758  00FAF4  0E18               	movlw	low main@empty_bottle
   759  00FAF6  6E03               	movwf	lcd_custom_char@Pattern^0,c
   760  00FAF8  0E00               	movlw	high main@empty_bottle
   761  00FAFA  6E04               	movwf	(lcd_custom_char@Pattern+1)^0,c
   762  00FAFC  0E02               	movlw	2
   763  00FAFE  6E05               	movwf	lcd_custom_char@Location^0,c
   764  00FB00  EC84  F07C         	call	_lcd_custom_char	;wreg free
   765  00FB04                     
   766                           ;main.c: 196:     lcd_custom_char(smile, 3);
   767  00FB04  0E20               	movlw	low main@smile
   768  00FB06  6E03               	movwf	lcd_custom_char@Pattern^0,c
   769  00FB08  0E00               	movlw	high main@smile
   770  00FB0A  6E04               	movwf	(lcd_custom_char@Pattern+1)^0,c
   771  00FB0C  0E03               	movlw	3
   772  00FB0E  6E05               	movwf	lcd_custom_char@Location^0,c
   773  00FB10  EC84  F07C         	call	_lcd_custom_char	;wreg free
   774  00FB14                     
   775                           ;main.c: 197:     lcd_custom_char(sad, 4);
   776  00FB14  0E28               	movlw	low main@sad
   777  00FB16  6E03               	movwf	lcd_custom_char@Pattern^0,c
   778  00FB18  0E00               	movlw	high main@sad
   779  00FB1A  6E04               	movwf	(lcd_custom_char@Pattern+1)^0,c
   780  00FB1C  0E04               	movlw	4
   781  00FB1E  6E05               	movwf	lcd_custom_char@Location^0,c
   782  00FB20  EC84  F07C         	call	_lcd_custom_char	;wreg free
   783  00FB24                     
   784                           ;main.c: 198:     lcd_custom_char(ciapki, 5);
   785  00FB24  0E30               	movlw	low main@ciapki
   786  00FB26  6E03               	movwf	lcd_custom_char@Pattern^0,c
   787  00FB28  0E00               	movlw	high main@ciapki
   788  00FB2A  6E04               	movwf	(lcd_custom_char@Pattern+1)^0,c
   789  00FB2C  0E05               	movlw	5
   790  00FB2E  6E05               	movwf	lcd_custom_char@Location^0,c
   791  00FB30  EC84  F07C         	call	_lcd_custom_char	;wreg free
   792  00FB34                     l1234:
   793                           
   794                           ;main.c: 202:     {;main.c: 203:        delay(500);
   795  00FB34  0E01               	movlw	1
   796  00FB36  6E02               	movwf	(delay@ms+1)^0,c
   797  00FB38  0EF4               	movlw	244
   798  00FB3A  6E01               	movwf	delay@ms^0,c
   799  00FB3C  ECA5  F07C         	call	_delay	;wreg free
   800  00FB40                     
   801                           ;main.c: 204:        lcd_cmd(0x01);
   802  00FB40  0E01               	movlw	1
   803  00FB42  EC45  F07C         	call	_lcd_cmd
   804  00FB46                     
   805                           ;main.c: 205:        lcd_cmd(0x80);
   806  00FB46  0E80               	movlw	128
   807  00FB48  EC45  F07C         	call	_lcd_cmd
   808  00FB4C                     
   809                           ;main.c: 206:        lcd_str("  Lubisz piwko? ");
   810  00FB4C  0E99               	movlw	low STR_1
   811  00FB4E  6E03               	movwf	lcd_str@str^0,c
   812  00FB50  0EFF               	movlw	high STR_1
   813  00FB52  6E04               	movwf	(lcd_str@str+1)^0,c
   814  00FB54  ECC9  F07C         	call	_lcd_str	;wreg free
   815  00FB58                     
   816                           ;main.c: 207:        lcd_cmd(0xC5);
   817  00FB58  0EC5               	movlw	197
   818  00FB5A  EC45  F07C         	call	_lcd_cmd
   819  00FB5E                     
   820                           ;main.c: 208:        lcd_dat(0);
   821  00FB5E  0E00               	movlw	0
   822  00FB60  EC4E  F07C         	call	_lcd_dat
   823  00FB64                     
   824                           ;main.c: 209:        lcd_cmd(0xC7);
   825  00FB64  0EC7               	movlw	199
   826  00FB66  EC45  F07C         	call	_lcd_cmd
   827  00FB6A                     
   828                           ;main.c: 210:        lcd_dat(3);
   829  00FB6A  0E03               	movlw	3
   830  00FB6C  EC4E  F07C         	call	_lcd_dat
   831  00FB70                     
   832                           ;main.c: 211:        lcd_cmd(0xC9);
   833  00FB70  0EC9               	movlw	201
   834  00FB72  EC45  F07C         	call	_lcd_cmd
   835  00FB76                     
   836                           ;main.c: 212:        lcd_dat(0);
   837  00FB76  0E00               	movlw	0
   838  00FB78  EC4E  F07C         	call	_lcd_dat
   839  00FB7C                     
   840                           ;main.c: 214:        delay(2000);
   841  00FB7C  0E07               	movlw	7
   842  00FB7E  6E02               	movwf	(delay@ms+1)^0,c
   843  00FB80  0ED0               	movlw	208
   844  00FB82  6E01               	movwf	delay@ms^0,c
   845  00FB84  ECA5  F07C         	call	_delay	;wreg free
   846  00FB88                     
   847                           ;main.c: 215:        lcd_cmd(0x01);
   848  00FB88  0E01               	movlw	1
   849  00FB8A  EC45  F07C         	call	_lcd_cmd
   850  00FB8E                     
   851                           ;main.c: 216:        lcd_cmd(0x80);
   852  00FB8E  0E80               	movlw	128
   853  00FB90  EC45  F07C         	call	_lcd_cmd
   854  00FB94                     
   855                           ;main.c: 217:        lcd_str("   My rowniez!  ");
   856  00FB94  0E55               	movlw	low STR_2
   857  00FB96  6E03               	movwf	lcd_str@str^0,c
   858  00FB98  0EFF               	movlw	high STR_2
   859  00FB9A  6E04               	movwf	(lcd_str@str+1)^0,c
   860  00FB9C  ECC9  F07C         	call	_lcd_str	;wreg free
   861  00FBA0                     
   862                           ;main.c: 218:        lcd_cmd(0xC5);
   863  00FBA0  0EC5               	movlw	197
   864  00FBA2  EC45  F07C         	call	_lcd_cmd
   865  00FBA6                     
   866                           ;main.c: 219:        lcd_dat(3);
   867  00FBA6  0E03               	movlw	3
   868  00FBA8  EC4E  F07C         	call	_lcd_dat
   869  00FBAC                     
   870                           ;main.c: 220:        lcd_cmd(0xC7);
   871  00FBAC  0EC7               	movlw	199
   872  00FBAE  EC45  F07C         	call	_lcd_cmd
   873  00FBB2                     
   874                           ;main.c: 221:        lcd_dat(3);
   875  00FBB2  0E03               	movlw	3
   876  00FBB4  EC4E  F07C         	call	_lcd_dat
   877  00FBB8                     
   878                           ;main.c: 222:        lcd_cmd(0xC9);
   879  00FBB8  0EC9               	movlw	201
   880  00FBBA  EC45  F07C         	call	_lcd_cmd
   881  00FBBE                     
   882                           ;main.c: 223:        lcd_dat(3);
   883  00FBBE  0E03               	movlw	3
   884  00FBC0  EC4E  F07C         	call	_lcd_dat
   885  00FBC4                     
   886                           ;main.c: 225:        delay(2000);
   887  00FBC4  0E07               	movlw	7
   888  00FBC6  6E02               	movwf	(delay@ms+1)^0,c
   889  00FBC8  0ED0               	movlw	208
   890  00FBCA  6E01               	movwf	delay@ms^0,c
   891  00FBCC  ECA5  F07C         	call	_delay	;wreg free
   892  00FBD0                     
   893                           ;main.c: 226:        lcd_cmd(0x01);
   894  00FBD0  0E01               	movlw	1
   895  00FBD2  EC45  F07C         	call	_lcd_cmd
   896  00FBD6                     
   897                           ;main.c: 227:        lcd_cmd(0x80);
   898  00FBD6  0E80               	movlw	128
   899  00FBD8  EC45  F07C         	call	_lcd_cmd
   900  00FBDC                     
   901                           ;main.c: 228:        lcd_str("  Ale za szybko ");
   902  00FBDC  0ECC               	movlw	low STR_3
   903  00FBDE  6E03               	movwf	lcd_str@str^0,c
   904  00FBE0  0EFF               	movlw	high STR_3
   905  00FBE2  6E04               	movwf	(lcd_str@str+1)^0,c
   906  00FBE4  ECC9  F07C         	call	_lcd_str	;wreg free
   907  00FBE8                     
   908                           ;main.c: 229:        lcd_cmd(0xC0);
   909  00FBE8  0EC0               	movlw	192
   910  00FBEA  EC45  F07C         	call	_lcd_cmd
   911  00FBEE                     
   912                           ;main.c: 230:        lcd_str("  sie konczy?   ");
   913  00FBEE  0E22               	movlw	low STR_4
   914  00FBF0  6E03               	movwf	lcd_str@str^0,c
   915  00FBF2  0EFF               	movlw	high STR_4
   916  00FBF4  6E04               	movwf	(lcd_str@str+1)^0,c
   917  00FBF6  ECC9  F07C         	call	_lcd_str	;wreg free
   918  00FBFA                     
   919                           ;main.c: 231:        lcd_cmd(0xCE);
   920  00FBFA  0ECE               	movlw	206
   921  00FBFC  EC45  F07C         	call	_lcd_cmd
   922  00FC00                     
   923                           ;main.c: 232:        lcd_dat(4);
   924  00FC00  0E04               	movlw	4
   925  00FC02  EC4E  F07C         	call	_lcd_dat
   926  00FC06                     
   927                           ;main.c: 234:        delay(1000);
   928  00FC06  0E03               	movlw	3
   929  00FC08  6E02               	movwf	(delay@ms+1)^0,c
   930  00FC0A  0EE8               	movlw	232
   931  00FC0C  6E01               	movwf	delay@ms^0,c
   932  00FC0E  ECA5  F07C         	call	_delay	;wreg free
   933  00FC12                     
   934                           ;main.c: 235:        lcd_cmd(0x01);
   935  00FC12  0E01               	movlw	1
   936  00FC14  EC45  F07C         	call	_lcd_cmd
   937  00FC18                     
   938                           ;main.c: 236:        lcd_cmd(0x80);
   939  00FC18  0E80               	movlw	128
   940  00FC1A  EC45  F07C         	call	_lcd_cmd
   941  00FC1E                     
   942                           ;main.c: 237:        lcd_str("  Gul!          ");
   943  00FC1E  0ECD               	movlw	low STR_5
   944  00FC20  6E03               	movwf	lcd_str@str^0,c
   945  00FC22  0EFE               	movlw	high STR_5
   946  00FC24  6E04               	movwf	(lcd_str@str+1)^0,c
   947  00FC26  ECC9  F07C         	call	_lcd_str	;wreg free
   948  00FC2A                     
   949                           ;main.c: 238:        lcd_cmd(0xC5);
   950  00FC2A  0EC5               	movlw	197
   951  00FC2C  EC45  F07C         	call	_lcd_cmd
   952  00FC30                     
   953                           ;main.c: 239:        lcd_dat(0);
   954  00FC30  0E00               	movlw	0
   955  00FC32  EC4E  F07C         	call	_lcd_dat
   956  00FC36                     
   957                           ;main.c: 240:        lcd_cmd(0xC7);
   958  00FC36  0EC7               	movlw	199
   959  00FC38  EC45  F07C         	call	_lcd_cmd
   960  00FC3C                     
   961                           ;main.c: 241:        lcd_dat(3);
   962  00FC3C  0E03               	movlw	3
   963  00FC3E  EC4E  F07C         	call	_lcd_dat
   964  00FC42                     
   965                           ;main.c: 242:        lcd_cmd(0xC9);
   966  00FC42  0EC9               	movlw	201
   967  00FC44  EC45  F07C         	call	_lcd_cmd
   968  00FC48                     
   969                           ;main.c: 243:        lcd_dat(0);
   970  00FC48  0E00               	movlw	0
   971  00FC4A  EC4E  F07C         	call	_lcd_dat
   972  00FC4E                     
   973                           ;main.c: 244:        delay(1000);
   974  00FC4E  0E03               	movlw	3
   975  00FC50  6E02               	movwf	(delay@ms+1)^0,c
   976  00FC52  0EE8               	movlw	232
   977  00FC54  6E01               	movwf	delay@ms^0,c
   978  00FC56  ECA5  F07C         	call	_delay	;wreg free
   979  00FC5A                     
   980                           ;main.c: 245:        lcd_cmd(0x01);
   981  00FC5A  0E01               	movlw	1
   982  00FC5C  EC45  F07C         	call	_lcd_cmd
   983  00FC60                     
   984                           ;main.c: 246:        lcd_cmd(0x80);
   985  00FC60  0E80               	movlw	128
   986  00FC62  EC45  F07C         	call	_lcd_cmd
   987  00FC66                     
   988                           ;main.c: 247:        lcd_str("      Gul!      ");
   989  00FC66  0EEF               	movlw	low STR_6
   990  00FC68  6E03               	movwf	lcd_str@str^0,c
   991  00FC6A  0EFE               	movlw	high STR_6
   992  00FC6C  6E04               	movwf	(lcd_str@str+1)^0,c
   993  00FC6E  ECC9  F07C         	call	_lcd_str	;wreg free
   994  00FC72                     
   995                           ;main.c: 248:        lcd_cmd(0xC5);
   996  00FC72  0EC5               	movlw	197
   997  00FC74  EC45  F07C         	call	_lcd_cmd
   998  00FC78                     
   999                           ;main.c: 249:        lcd_dat(1);
  1000  00FC78  0E01               	movlw	1
  1001  00FC7A  EC4E  F07C         	call	_lcd_dat
  1002  00FC7E                     
  1003                           ;main.c: 250:        lcd_cmd(0xC7);
  1004  00FC7E  0EC7               	movlw	199
  1005  00FC80  EC45  F07C         	call	_lcd_cmd
  1006  00FC84                     
  1007                           ;main.c: 251:        lcd_dat(3);
  1008  00FC84  0E03               	movlw	3
  1009  00FC86  EC4E  F07C         	call	_lcd_dat
  1010  00FC8A                     
  1011                           ;main.c: 252:        lcd_cmd(0xC9);
  1012  00FC8A  0EC9               	movlw	201
  1013  00FC8C  EC45  F07C         	call	_lcd_cmd
  1014  00FC90                     
  1015                           ;main.c: 253:        lcd_dat(1);
  1016  00FC90  0E01               	movlw	1
  1017  00FC92  EC4E  F07C         	call	_lcd_dat
  1018  00FC96                     
  1019                           ;main.c: 254:        delay(1000);
  1020  00FC96  0E03               	movlw	3
  1021  00FC98  6E02               	movwf	(delay@ms+1)^0,c
  1022  00FC9A  0EE8               	movlw	232
  1023  00FC9C  6E01               	movwf	delay@ms^0,c
  1024  00FC9E  ECA5  F07C         	call	_delay	;wreg free
  1025  00FCA2                     
  1026                           ;main.c: 255:        lcd_cmd(0x01);
  1027  00FCA2  0E01               	movlw	1
  1028  00FCA4  EC45  F07C         	call	_lcd_cmd
  1029  00FCA8                     
  1030                           ;main.c: 256:        lcd_cmd(0x80);
  1031  00FCA8  0E80               	movlw	128
  1032  00FCAA  EC45  F07C         	call	_lcd_cmd
  1033  00FCAE                     
  1034                           ;main.c: 257:        lcd_str("          Gul!  ");
  1035  00FCAE  0E44               	movlw	low STR_7
  1036  00FCB0  6E03               	movwf	lcd_str@str^0,c
  1037  00FCB2  0EFF               	movlw	high STR_7
  1038  00FCB4  6E04               	movwf	(lcd_str@str+1)^0,c
  1039  00FCB6  ECC9  F07C         	call	_lcd_str	;wreg free
  1040  00FCBA                     
  1041                           ;main.c: 258:        lcd_cmd(0xC5);
  1042  00FCBA  0EC5               	movlw	197
  1043  00FCBC  EC45  F07C         	call	_lcd_cmd
  1044  00FCC0                     
  1045                           ;main.c: 259:        lcd_dat(2);
  1046  00FCC0  0E02               	movlw	2
  1047  00FCC2  EC4E  F07C         	call	_lcd_dat
  1048  00FCC6                     
  1049                           ;main.c: 260:        lcd_cmd(0xC7);
  1050  00FCC6  0EC7               	movlw	199
  1051  00FCC8  EC45  F07C         	call	_lcd_cmd
  1052  00FCCC                     
  1053                           ;main.c: 261:        lcd_dat(4);
  1054  00FCCC  0E04               	movlw	4
  1055  00FCCE  EC4E  F07C         	call	_lcd_dat
  1056  00FCD2                     
  1057                           ;main.c: 262:        lcd_cmd(0xC9);
  1058  00FCD2  0EC9               	movlw	201
  1059  00FCD4  EC45  F07C         	call	_lcd_cmd
  1060  00FCD8                     
  1061                           ;main.c: 263:        lcd_dat(2);
  1062  00FCD8  0E02               	movlw	2
  1063  00FCDA  EC4E  F07C         	call	_lcd_dat
  1064  00FCDE                     
  1065                           ;main.c: 265:        delay(2000);
  1066  00FCDE  0E07               	movlw	7
  1067  00FCE0  6E02               	movwf	(delay@ms+1)^0,c
  1068  00FCE2  0ED0               	movlw	208
  1069  00FCE4  6E01               	movwf	delay@ms^0,c
  1070  00FCE6  ECA5  F07C         	call	_delay	;wreg free
  1071  00FCEA                     
  1072                           ;main.c: 266:        lcd_cmd(0x01);
  1073  00FCEA  0E01               	movlw	1
  1074  00FCEC  EC45  F07C         	call	_lcd_cmd
  1075  00FCF0                     
  1076                           ;main.c: 267:        lcd_cmd(0x80);
  1077  00FCF0  0E80               	movlw	128
  1078  00FCF2  EC45  F07C         	call	_lcd_cmd
  1079  00FCF6                     
  1080                           ;main.c: 268:        lcd_str("   Jest po 22?  ");
  1081  00FCF6  0E66               	movlw	low STR_8
  1082  00FCF8  6E03               	movwf	lcd_str@str^0,c
  1083  00FCFA  0EFF               	movlw	high STR_8
  1084  00FCFC  6E04               	movwf	(lcd_str@str+1)^0,c
  1085  00FCFE  ECC9  F07C         	call	_lcd_str	;wreg free
  1086  00FD02                     
  1087                           ;main.c: 269:        lcd_cmd(0xC5);
  1088  00FD02  0EC5               	movlw	197
  1089  00FD04  EC45  F07C         	call	_lcd_cmd
  1090  00FD08                     
  1091                           ;main.c: 270:        lcd_dat(4);
  1092  00FD08  0E04               	movlw	4
  1093  00FD0A  EC4E  F07C         	call	_lcd_dat
  1094  00FD0E                     
  1095                           ;main.c: 271:        lcd_cmd(0xC7);
  1096  00FD0E  0EC7               	movlw	199
  1097  00FD10  EC45  F07C         	call	_lcd_cmd
  1098  00FD14                     
  1099                           ;main.c: 272:        lcd_dat(4);
  1100  00FD14  0E04               	movlw	4
  1101  00FD16  EC4E  F07C         	call	_lcd_dat
  1102  00FD1A                     
  1103                           ;main.c: 273:        lcd_cmd(0xC9);
  1104  00FD1A  0EC9               	movlw	201
  1105  00FD1C  EC45  F07C         	call	_lcd_cmd
  1106  00FD20                     
  1107                           ;main.c: 274:        lcd_dat(4);
  1108  00FD20  0E04               	movlw	4
  1109  00FD22  EC4E  F07C         	call	_lcd_dat
  1110  00FD26                     
  1111                           ;main.c: 276:        delay(2000);
  1112  00FD26  0E07               	movlw	7
  1113  00FD28  6E02               	movwf	(delay@ms+1)^0,c
  1114  00FD2A  0ED0               	movlw	208
  1115  00FD2C  6E01               	movwf	delay@ms^0,c
  1116  00FD2E  ECA5  F07C         	call	_delay	;wreg free
  1117  00FD32                     
  1118                           ;main.c: 277:        lcd_cmd(0x01);
  1119  00FD32  0E01               	movlw	1
  1120  00FD34  EC45  F07C         	call	_lcd_cmd
  1121  00FD38                     
  1122                           ;main.c: 278:        lcd_cmd(0x80);
  1123  00FD38  0E80               	movlw	128
  1124  00FD3A  EC45  F07C         	call	_lcd_cmd
  1125  00FD3E                     
  1126                           ;main.c: 279:        lcd_str("Dla nas to nie  ");
  1127  00FD3E  0E77               	movlw	low STR_9
  1128  00FD40  6E03               	movwf	lcd_str@str^0,c
  1129  00FD42  0EFF               	movlw	high STR_9
  1130  00FD44  6E04               	movwf	(lcd_str@str+1)^0,c
  1131  00FD46  ECC9  F07C         	call	_lcd_str	;wreg free
  1132  00FD4A                     
  1133                           ;main.c: 280:        lcd_cmd(0xC0);
  1134  00FD4A  0EC0               	movlw	192
  1135  00FD4C  EC45  F07C         	call	_lcd_cmd
  1136  00FD50                     
  1137                           ;main.c: 281:        lcd_str("problem!        ");
  1138  00FD50  0EDE               	movlw	low STR_10
  1139  00FD52  6E03               	movwf	lcd_str@str^0,c
  1140  00FD54  0EFE               	movlw	high STR_10
  1141  00FD56  6E04               	movwf	(lcd_str@str+1)^0,c
  1142  00FD58  ECC9  F07C         	call	_lcd_str	;wreg free
  1143  00FD5C                     
  1144                           ;main.c: 282:        lcd_cmd(0xCA);
  1145  00FD5C  0ECA               	movlw	202
  1146  00FD5E  EC45  F07C         	call	_lcd_cmd
  1147  00FD62                     
  1148                           ;main.c: 283:        lcd_dat(3);
  1149  00FD62  0E03               	movlw	3
  1150  00FD64  EC4E  F07C         	call	_lcd_dat
  1151  00FD68                     
  1152                           ;main.c: 284:        lcd_cmd(0xCB);
  1153  00FD68  0ECB               	movlw	203
  1154  00FD6A  EC45  F07C         	call	_lcd_cmd
  1155  00FD6E                     
  1156                           ;main.c: 285:        lcd_dat(0);
  1157  00FD6E  0E00               	movlw	0
  1158  00FD70  EC4E  F07C         	call	_lcd_dat
  1159  00FD74                     
  1160                           ;main.c: 287:        delay(2000);
  1161  00FD74  0E07               	movlw	7
  1162  00FD76  6E02               	movwf	(delay@ms+1)^0,c
  1163  00FD78  0ED0               	movlw	208
  1164  00FD7A  6E01               	movwf	delay@ms^0,c
  1165  00FD7C  ECA5  F07C         	call	_delay	;wreg free
  1166  00FD80                     
  1167                           ;main.c: 288:        lcd_cmd(0x01);
  1168  00FD80  0E01               	movlw	1
  1169  00FD82  EC45  F07C         	call	_lcd_cmd
  1170  00FD86                     
  1171                           ;main.c: 289:        lcd_cmd(0x80);
  1172  00FD86  0E80               	movlw	128
  1173  00FD88  EC45  F07C         	call	_lcd_cmd
  1174  00FD8C                     
  1175                           ;main.c: 290:        lcd_str("Omijamy lukiem  ");
  1176  00FD8C  0E88               	movlw	low STR_11
  1177  00FD8E  6E03               	movwf	lcd_str@str^0,c
  1178  00FD90  0EFF               	movlw	high STR_11
  1179  00FD92  6E04               	movwf	(lcd_str@str+1)^0,c
  1180  00FD94  ECC9  F07C         	call	_lcd_str	;wreg free
  1181  00FD98                     
  1182                           ;main.c: 291:        lcd_cmd(0xC0);
  1183  00FD98  0EC0               	movlw	192
  1184  00FD9A  EC45  F07C         	call	_lcd_cmd
  1185  00FD9E                     
  1186                           ;main.c: 292:        lcd_str("prohibicje!     ");
  1187  00FD9E  0E00               	movlw	low STR_12
  1188  00FDA0  6E03               	movwf	lcd_str@str^0,c
  1189  00FDA2  0EFF               	movlw	high STR_12
  1190  00FDA4  6E04               	movwf	(lcd_str@str+1)^0,c
  1191  00FDA6  ECC9  F07C         	call	_lcd_str	;wreg free
  1192  00FDAA                     
  1193                           ;main.c: 293:        lcd_cmd(0xCD);
  1194  00FDAA  0ECD               	movlw	205
  1195  00FDAC  EC45  F07C         	call	_lcd_cmd
  1196  00FDB0                     
  1197                           ;main.c: 294:        lcd_dat(0);
  1198  00FDB0  0E00               	movlw	0
  1199  00FDB2  EC4E  F07C         	call	_lcd_dat
  1200  00FDB6                     
  1201                           ;main.c: 295:        lcd_cmd(0xCE);
  1202  00FDB6  0ECE               	movlw	206
  1203  00FDB8  EC45  F07C         	call	_lcd_cmd
  1204  00FDBC                     
  1205                           ;main.c: 296:        lcd_dat(3);
  1206  00FDBC  0E03               	movlw	3
  1207  00FDBE  EC4E  F07C         	call	_lcd_dat
  1208  00FDC2                     
  1209                           ;main.c: 297:        lcd_cmd(0xCF);
  1210  00FDC2  0ECF               	movlw	207
  1211  00FDC4  EC45  F07C         	call	_lcd_cmd
  1212  00FDC8                     
  1213                           ;main.c: 298:        lcd_dat(0);
  1214  00FDC8  0E00               	movlw	0
  1215  00FDCA  EC4E  F07C         	call	_lcd_dat
  1216  00FDCE                     
  1217                           ;main.c: 300:        delay(2000);
  1218  00FDCE  0E07               	movlw	7
  1219  00FDD0  6E02               	movwf	(delay@ms+1)^0,c
  1220  00FDD2  0ED0               	movlw	208
  1221  00FDD4  6E01               	movwf	delay@ms^0,c
  1222  00FDD6  ECA5  F07C         	call	_delay	;wreg free
  1223  00FDDA                     
  1224                           ;main.c: 301:        lcd_cmd(0x01);
  1225  00FDDA  0E01               	movlw	1
  1226  00FDDC  EC45  F07C         	call	_lcd_cmd
  1227  00FDE0                     
  1228                           ;main.c: 302:        lcd_cmd(0x80);
  1229  00FDE0  0E80               	movlw	128
  1230  00FDE2  EC45  F07C         	call	_lcd_cmd
  1231  00FDE6                     
  1232                           ;main.c: 303:        lcd_str("GDY JEST WEEKEND");
  1233  00FDE6  0EDD               	movlw	low STR_13
  1234  00FDE8  6E03               	movwf	lcd_str@str^0,c
  1235  00FDEA  0EFF               	movlw	high STR_13
  1236  00FDEC  6E04               	movwf	(lcd_str@str+1)^0,c
  1237  00FDEE  ECC9  F07C         	call	_lcd_str	;wreg free
  1238  00FDF2                     
  1239                           ;main.c: 304:        lcd_cmd(0xC0);
  1240  00FDF2  0EC0               	movlw	192
  1241  00FDF4  EC45  F07C         	call	_lcd_cmd
  1242  00FDF8                     
  1243                           ;main.c: 305:        lcd_str("   LUB CI ZLE   ");
  1244  00FDF8  0E33               	movlw	low STR_14
  1245  00FDFA  6E03               	movwf	lcd_str@str^0,c
  1246  00FDFC  0EFF               	movlw	high STR_14
  1247  00FDFE  6E04               	movwf	(lcd_str@str+1)^0,c
  1248  00FE00  ECC9  F07C         	call	_lcd_str	;wreg free
  1249  00FE04                     
  1250                           ;main.c: 306:        lcd_cmd(0xC1);
  1251  00FE04  0EC1               	movlw	193
  1252  00FE06  EC45  F07C         	call	_lcd_cmd
  1253  00FE0A                     
  1254                           ;main.c: 307:        lcd_dat(4);
  1255  00FE0A  0E04               	movlw	4
  1256  00FE0C  EC4E  F07C         	call	_lcd_dat
  1257  00FE10                     
  1258                           ;main.c: 308:        lcd_cmd(0xCE);
  1259  00FE10  0ECE               	movlw	206
  1260  00FE12  EC45  F07C         	call	_lcd_cmd
  1261  00FE16                     
  1262                           ;main.c: 309:        lcd_dat(4);
  1263  00FE16  0E04               	movlw	4
  1264  00FE18  EC4E  F07C         	call	_lcd_dat
  1265  00FE1C                     
  1266                           ;main.c: 311:        delay(2000);
  1267  00FE1C  0E07               	movlw	7
  1268  00FE1E  6E02               	movwf	(delay@ms+1)^0,c
  1269  00FE20  0ED0               	movlw	208
  1270  00FE22  6E01               	movwf	delay@ms^0,c
  1271  00FE24  ECA5  F07C         	call	_delay	;wreg free
  1272  00FE28                     
  1273                           ;main.c: 312:        lcd_cmd(0x01);
  1274  00FE28  0E01               	movlw	1
  1275  00FE2A  EC45  F07C         	call	_lcd_cmd
  1276  00FE2E                     
  1277                           ;main.c: 313:        lcd_cmd(0x80);
  1278  00FE2E  0E80               	movlw	128
  1279  00FE30  EC45  F07C         	call	_lcd_cmd
  1280  00FE34                     
  1281                           ;main.c: 314:        lcd_str("  WPADAJ DO NAS ");
  1282  00FE34  0EBB               	movlw	low STR_15
  1283  00FE36  6E03               	movwf	lcd_str@str^0,c
  1284  00FE38  0EFF               	movlw	high STR_15
  1285  00FE3A  6E04               	movwf	(lcd_str@str+1)^0,c
  1286  00FE3C  ECC9  F07C         	call	_lcd_str	;wreg free
  1287  00FE40                     
  1288                           ;main.c: 315:        lcd_cmd(0xC0);
  1289  00FE40  0EC0               	movlw	192
  1290  00FE42  EC45  F07C         	call	_lcd_cmd
  1291  00FE46                     
  1292                           ;main.c: 316:        lcd_str("   POROB SIE!   ");
  1293  00FE46  0E11               	movlw	low STR_16
  1294  00FE48  6E03               	movwf	lcd_str@str^0,c
  1295  00FE4A  0EFF               	movlw	high STR_16
  1296  00FE4C  6E04               	movwf	(lcd_str@str+1)^0,c
  1297  00FE4E  ECC9  F07C         	call	_lcd_str	;wreg free
  1298  00FE52                     
  1299                           ;main.c: 317:        lcd_cmd(0xC1);
  1300  00FE52  0EC1               	movlw	193
  1301  00FE54  EC45  F07C         	call	_lcd_cmd
  1302  00FE58                     
  1303                           ;main.c: 318:        lcd_dat(3);
  1304  00FE58  0E03               	movlw	3
  1305  00FE5A  EC4E  F07C         	call	_lcd_dat
  1306  00FE5E                     
  1307                           ;main.c: 319:        lcd_cmd(0xCE);
  1308  00FE5E  0ECE               	movlw	206
  1309  00FE60  EC45  F07C         	call	_lcd_cmd
  1310  00FE64                     
  1311                           ;main.c: 320:        lcd_dat(3);
  1312  00FE64  0E03               	movlw	3
  1313  00FE66  EC4E  F07C         	call	_lcd_dat
  1314  00FE6A                     
  1315                           ;main.c: 322:        delay(2000);
  1316  00FE6A  0E07               	movlw	7
  1317  00FE6C  6E02               	movwf	(delay@ms+1)^0,c
  1318  00FE6E  0ED0               	movlw	208
  1319  00FE70  6E01               	movwf	delay@ms^0,c
  1320  00FE72  ECA5  F07C         	call	_delay	;wreg free
  1321  00FE76                     
  1322                           ;main.c: 323:        lcd_cmd(0x01);
  1323  00FE76  0E01               	movlw	1
  1324  00FE78  EC45  F07C         	call	_lcd_cmd
  1325  00FE7C                     
  1326                           ;main.c: 324:        lcd_cmd(0x80);
  1327  00FE7C  0E80               	movlw	128
  1328  00FE7E  EC45  F07C         	call	_lcd_cmd
  1329  00FE82                     
  1330                           ;main.c: 325:        lcd_str(" Z KODEM  SYSWB ");
  1331  00FE82  0EAA               	movlw	low STR_17
  1332  00FE84  6E03               	movwf	lcd_str@str^0,c
  1333  00FE86  0EFF               	movlw	high STR_17
  1334  00FE88  6E04               	movwf	(lcd_str@str+1)^0,c
  1335  00FE8A  ECC9  F07C         	call	_lcd_str	;wreg free
  1336  00FE8E                     
  1337                           ;main.c: 326:        lcd_cmd(0x89);
  1338  00FE8E  0E89               	movlw	137
  1339  00FE90  EC45  F07C         	call	_lcd_cmd
  1340  00FE94                     
  1341                           ;main.c: 327:        lcd_dat(5);
  1342  00FE94  0E05               	movlw	5
  1343  00FE96  EC4E  F07C         	call	_lcd_dat
  1344  00FE9A                     
  1345                           ;main.c: 328:        lcd_cmd(0x8F);
  1346  00FE9A  0E8F               	movlw	143
  1347  00FE9C  EC45  F07C         	call	_lcd_cmd
  1348  00FEA0                     
  1349                           ;main.c: 329:        lcd_dat(5);
  1350  00FEA0  0E05               	movlw	5
  1351  00FEA2  EC4E  F07C         	call	_lcd_dat
  1352  00FEA6                     
  1353                           ;main.c: 330:        lcd_cmd(0xC0);
  1354  00FEA6  0EC0               	movlw	192
  1355  00FEA8  EC45  F07C         	call	_lcd_cmd
  1356  00FEAC                     
  1357                           ;main.c: 331:        lcd_str("4 PROCENT ZNIZKI");
  1358  00FEAC  0EEE               	movlw	low STR_18
  1359  00FEAE  6E03               	movwf	lcd_str@str^0,c
  1360  00FEB0  0EFF               	movlw	high STR_18
  1361  00FEB2  6E04               	movwf	(lcd_str@str+1)^0,c
  1362  00FEB4  ECC9  F07C         	call	_lcd_str	;wreg free
  1363  00FEB8                     
  1364                           ;main.c: 332:        delay(5000);
  1365  00FEB8  0E13               	movlw	19
  1366  00FEBA  6E02               	movwf	(delay@ms+1)^0,c
  1367  00FEBC  0E88               	movlw	136
  1368  00FEBE  6E01               	movwf	delay@ms^0,c
  1369  00FEC0  ECA5  F07C         	call	_delay	;wreg free
  1370  00FEC4  EF9A  F07D         	goto	l1234
  1371  00FEC8  EF00  F000         	goto	start
  1372  00FECC                     __end_of_main:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _lcd_str *****************
  1376 ;; Defined at:
  1377 ;;		line 152 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  str             2    2[COMRAM] PTR const unsigned char 
  1380 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  1381 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  1382 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  1383 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  1384 ;;		 -> STR_2(17), STR_1(17), 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  i               1    6[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        5 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 2
  1403 ;; This function calls:
  1404 ;;		_lcd_dat
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text1
  1411  00F992                     __ptext1:
  1412                           	callstack 0
  1413  00F992                     _lcd_str:
  1414                           	callstack 28
  1415  00F992                     
  1416                           ;main.c: 152: void lcd_str(const char* str);main.c: 153: {;main.c: 154:  unsigned char i
      +                          =0;
  1417  00F992  0E00               	movlw	0
  1418  00F994  6E07               	movwf	lcd_str@i^0,c
  1419                           
  1420                           ;main.c: 156:  while(str[i] != 0 )
  1421  00F996  EFDC  F07C         	goto	l1188
  1422  00F99A                     l1184:
  1423                           
  1424                           ;main.c: 157:  {;main.c: 158:    lcd_dat(str[i]);
  1425  00F99A  5007               	movf	lcd_str@i^0,w,c
  1426  00F99C  2403               	addwf	lcd_str@str^0,w,c
  1427  00F99E  6E05               	movwf	??_lcd_str^0,c
  1428  00F9A0  0E00               	movlw	0
  1429  00F9A2  2004               	addwfc	(lcd_str@str+1)^0,w,c
  1430  00F9A4  6E06               	movwf	(??_lcd_str+1)^0,c
  1431  00F9A6  C005  FFF6         	movff	??_lcd_str,tblptrl
  1432  00F9AA  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  1433  00F9AE                     	if	0	;tblptru may be non-zero
  1434  00F9AE                     	endif
  1435  00F9AE                     	if	0	;tblptru may be non-zero
  1436  00F9AE                     	endif
  1437  00F9AE  0008               	tblrd		*
  1438  00F9B0  50F5               	movf	tablat,w,c
  1439  00F9B2  EC4E  F07C         	call	_lcd_dat
  1440  00F9B6                     
  1441                           ;main.c: 159:    i++;
  1442  00F9B6  2A07               	incf	lcd_str@i^0,f,c
  1443  00F9B8                     l1188:
  1444                           
  1445                           ;main.c: 156:  while(str[i] != 0 )
  1446  00F9B8  5007               	movf	lcd_str@i^0,w,c
  1447  00F9BA  2403               	addwf	lcd_str@str^0,w,c
  1448  00F9BC  6E05               	movwf	??_lcd_str^0,c
  1449  00F9BE  0E00               	movlw	0
  1450  00F9C0  2004               	addwfc	(lcd_str@str+1)^0,w,c
  1451  00F9C2  6E06               	movwf	(??_lcd_str+1)^0,c
  1452  00F9C4  C005  FFF6         	movff	??_lcd_str,tblptrl
  1453  00F9C8  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  1454  00F9CC                     	if	0	;tblptru may be non-zero
  1455  00F9CC                     	endif
  1456  00F9CC                     	if	0	;tblptru may be non-zero
  1457  00F9CC                     	endif
  1458  00F9CC  0008               	tblrd		*
  1459  00F9CE  50F5               	movf	tablat,w,c
  1460  00F9D0  0900               	iorlw	0
  1461  00F9D2  A4D8               	btfss	status,2,c
  1462  00F9D4  EFEE  F07C         	goto	u141
  1463  00F9D8  EFF0  F07C         	goto	u140
  1464  00F9DC                     u141:
  1465  00F9DC  EFCD  F07C         	goto	l1184
  1466  00F9E0                     u140:
  1467  00F9E0  0012               	return		;funcret
  1468  00F9E2                     __end_of_lcd_str:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _lcd_init *****************
  1472 ;; Defined at:
  1473 ;;		line 133 in file "main.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 2
  1494 ;; This function calls:
  1495 ;;		_delay
  1496 ;;		_lcd_cmd
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text2
  1503  00F9E2                     __ptext2:
  1504                           	callstack 0
  1505  00F9E2                     _lcd_init:
  1506                           	callstack 28
  1507  00F9E2                     
  1508                           ;main.c: 135:  PORTEbits.RE1=0;
  1509  00F9E2  9284               	bcf	132,1,c	;volatile
  1510                           
  1511                           ;main.c: 136:  PORTEbits.RE2=0;
  1512  00F9E4  9484               	bcf	132,2,c	;volatile
  1513  00F9E6                     
  1514                           ;main.c: 137:  delay(20);
  1515  00F9E6  0E00               	movlw	0
  1516  00F9E8  6E02               	movwf	(delay@ms+1)^0,c
  1517  00F9EA  0E14               	movlw	20
  1518  00F9EC  6E01               	movwf	delay@ms^0,c
  1519  00F9EE  ECA5  F07C         	call	_delay	;wreg free
  1520  00F9F2                     
  1521                           ;main.c: 138:  PORTEbits.RE1=1;
  1522  00F9F2  8284               	bsf	132,1,c	;volatile
  1523  00F9F4                     
  1524                           ;main.c: 140:  lcd_cmd(0x38);
  1525  00F9F4  0E38               	movlw	56
  1526  00F9F6  EC45  F07C         	call	_lcd_cmd
  1527  00F9FA                     
  1528                           ;main.c: 141:  delay(5);
  1529  00F9FA  0E00               	movlw	0
  1530  00F9FC  6E02               	movwf	(delay@ms+1)^0,c
  1531  00F9FE  0E05               	movlw	5
  1532  00FA00  6E01               	movwf	delay@ms^0,c
  1533  00FA02  ECA5  F07C         	call	_delay	;wreg free
  1534                           
  1535                           ;main.c: 142:  lcd_cmd(0x38);
  1536  00FA06  0E38               	movlw	56
  1537  00FA08  EC45  F07C         	call	_lcd_cmd
  1538  00FA0C                     
  1539                           ;main.c: 143:         delay(1);
  1540  00FA0C  0E00               	movlw	0
  1541  00FA0E  6E02               	movwf	(delay@ms+1)^0,c
  1542  00FA10  0E01               	movlw	1
  1543  00FA12  6E01               	movwf	delay@ms^0,c
  1544  00FA14  ECA5  F07C         	call	_delay	;wreg free
  1545  00FA18                     
  1546                           ;main.c: 144:  lcd_cmd(0x38);
  1547  00FA18  0E38               	movlw	56
  1548  00FA1A  EC45  F07C         	call	_lcd_cmd
  1549  00FA1E                     
  1550                           ;main.c: 145:  lcd_cmd(0x08);
  1551  00FA1E  0E08               	movlw	8
  1552  00FA20  EC45  F07C         	call	_lcd_cmd
  1553  00FA24                     
  1554                           ;main.c: 146:  lcd_cmd(0x0F);
  1555  00FA24  0E0F               	movlw	15
  1556  00FA26  EC45  F07C         	call	_lcd_cmd
  1557  00FA2A                     
  1558                           ;main.c: 147:  lcd_cmd(0x01);
  1559  00FA2A  0E01               	movlw	1
  1560  00FA2C  EC45  F07C         	call	_lcd_cmd
  1561  00FA30                     
  1562                           ;main.c: 148:  lcd_cmd(0x38);
  1563  00FA30  0E38               	movlw	56
  1564  00FA32  EC45  F07C         	call	_lcd_cmd
  1565  00FA36                     
  1566                           ;main.c: 149:         lcd_cmd(0x80);
  1567  00FA36  0E80               	movlw	128
  1568  00FA38  EC45  F07C         	call	_lcd_cmd
  1569  00FA3C  0012               	return		;funcret
  1570  00FA3E                     __end_of_lcd_init:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _delay *****************
  1574 ;; Defined at:
  1575 ;;		line 72 in file "main.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  ms              2    0[COMRAM] unsigned int 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  i               2    2[COMRAM] unsigned int 
  1580 ;;  j               1    4[COMRAM] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;Total ram usage:        5 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_lcd_init
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text3
  1605  00F94A                     __ptext3:
  1606                           	callstack 0
  1607  00F94A                     _delay:
  1608                           	callstack 29
  1609  00F94A                     
  1610                           ;main.c: 72: void delay(unsigned int ms);main.c: 73: {;main.c: 74:     unsigned int i;;m
      +                          ain.c: 75:     unsigned char j;;main.c: 77:  for (i =0; i< ms; i++)
  1611  00F94A  0E00               	movlw	0
  1612  00F94C  6E04               	movwf	(delay@i+1)^0,c
  1613  00F94E  0E00               	movlw	0
  1614  00F950  6E03               	movwf	delay@i^0,c
  1615  00F952  EFBD  F07C         	goto	l1156
  1616  00F956                     l1144:
  1617                           
  1618                           ;main.c: 78:  {;main.c: 80:   for (j =0 ; j < 200; j++)
  1619  00F956  0E00               	movlw	0
  1620  00F958  6E05               	movwf	delay@j^0,c
  1621  00F95A                     l33:
  1622                           
  1623                           ;main.c: 81:    {;main.c: 82:       __nop();
  1624  00F95A  F000               	nop	
  1625                           
  1626                           ;main.c: 83:       __nop();
  1627  00F95C  F000               	nop	
  1628                           
  1629                           ;main.c: 84:       __nop();
  1630  00F95E  F000               	nop	
  1631                           
  1632                           ;main.c: 85:       __nop();
  1633  00F960  F000               	nop	
  1634                           
  1635                           ;main.c: 86:       __nop();
  1636  00F962  F000               	nop	
  1637  00F964                     
  1638                           ;main.c: 87:    }
  1639  00F964  2A05               	incf	delay@j^0,f,c
  1640  00F966  0EC7               	movlw	199
  1641  00F968  6405               	cpfsgt	delay@j^0,c
  1642  00F96A  EFB9  F07C         	goto	u121
  1643  00F96E  EFBB  F07C         	goto	u120
  1644  00F972                     u121:
  1645  00F972  EFAD  F07C         	goto	l33
  1646  00F976                     u120:
  1647  00F976                     
  1648                           ;main.c: 88:  }
  1649  00F976  4A03               	infsnz	delay@i^0,f,c
  1650  00F978  2A04               	incf	(delay@i+1)^0,f,c
  1651  00F97A                     l1156:
  1652  00F97A  5001               	movf	delay@ms^0,w,c
  1653  00F97C  5C03               	subwf	delay@i^0,w,c
  1654  00F97E  5002               	movf	(delay@ms+1)^0,w,c
  1655  00F980  5804               	subwfb	(delay@i+1)^0,w,c
  1656  00F982  A0D8               	btfss	status,0,c
  1657  00F984  EFC6  F07C         	goto	u131
  1658  00F988  EFC8  F07C         	goto	u130
  1659  00F98C                     u131:
  1660  00F98C  EFAB  F07C         	goto	l1144
  1661  00F990                     u130:
  1662  00F990  0012               	return		;funcret
  1663  00F992                     __end_of_delay:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _lcd_custom_char *****************
  1667 ;; Defined at:
  1668 ;;		line 163 in file "main.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  Pattern         2    2[COMRAM] PTR unsigned char 
  1671 ;;		 -> main@ciapki(8), main@sad(8), main@smile(8), main@empty_bottle(8), 
  1672 ;;		 -> main@half_bottle(8), main@full_bottle(8), 
  1673 ;;  Location        1    4[COMRAM] const unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               2    5[COMRAM] unsigned int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        5 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 2
  1692 ;; This function calls:
  1693 ;;		_lcd_cmd
  1694 ;;		_lcd_dat
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text4
  1701  00F908                     __ptext4:
  1702                           	callstack 0
  1703  00F908                     _lcd_custom_char:
  1704                           	callstack 28
  1705  00F908                     
  1706                           ;main.c: 164:     unsigned int i;;main.c: 165:     lcd_cmd(0x40+(Location*8));
  1707  00F908  5005               	movf	lcd_custom_char@Location^0,w,c
  1708  00F90A  0D08               	mullw	8
  1709  00F90C  50F3               	movf	243,w,c
  1710  00F90E  0F40               	addlw	64
  1711  00F910  EC45  F07C         	call	_lcd_cmd
  1712  00F914                     
  1713                           ;main.c: 166:     for (i=0; i<8; i++){
  1714  00F914  0E00               	movlw	0
  1715  00F916  6E07               	movwf	(lcd_custom_char@i+1)^0,c
  1716  00F918  0E00               	movlw	0
  1717  00F91A  6E06               	movwf	lcd_custom_char@i^0,c
  1718  00F91C                     l1198:
  1719                           
  1720                           ;main.c: 167:         lcd_dat(Pattern[i]);
  1721  00F91C  5006               	movf	lcd_custom_char@i^0,w,c
  1722  00F91E  2403               	addwf	lcd_custom_char@Pattern^0,w,c
  1723  00F920  6ED9               	movwf	fsr2l,c
  1724  00F922  5007               	movf	(lcd_custom_char@i+1)^0,w,c
  1725  00F924  2004               	addwfc	(lcd_custom_char@Pattern+1)^0,w,c
  1726  00F926  6EDA               	movwf	fsr2h,c
  1727  00F928  50DF               	movf	indf2,w,c
  1728  00F92A  EC4E  F07C         	call	_lcd_dat
  1729  00F92E                     
  1730                           ;main.c: 168:     }
  1731  00F92E  4A06               	infsnz	lcd_custom_char@i^0,f,c
  1732  00F930  2A07               	incf	(lcd_custom_char@i+1)^0,f,c
  1733  00F932  5007               	movf	(lcd_custom_char@i+1)^0,w,c
  1734  00F934  E109               	bnz	u150
  1735  00F936  0E08               	movlw	8
  1736  00F938  5C06               	subwf	lcd_custom_char@i^0,w,c
  1737  00F93A  A0D8               	btfss	status,0,c
  1738  00F93C  EFA2  F07C         	goto	u151
  1739  00F940  EFA4  F07C         	goto	u150
  1740  00F944                     u151:
  1741  00F944  EF8E  F07C         	goto	l1198
  1742  00F948                     u150:
  1743  00F948  0012               	return		;funcret
  1744  00F94A                     __end_of_lcd_custom_char:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _lcd_dat *****************
  1748 ;; Defined at:
  1749 ;;		line 122 in file "main.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  val             1    wreg     unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  val             1    1[COMRAM] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 1
  1770 ;; This function calls:
  1771 ;;		_lcd_wr
  1772 ;; This function is called by:
  1773 ;;		_lcd_str
  1774 ;;		_lcd_custom_char
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text5
  1780  00F89C                     __ptext5:
  1781                           	callstack 0
  1782  00F89C                     _lcd_dat:
  1783                           	callstack 28
  1784                           
  1785                           ;incstack = 0
  1786                           ;lcd_dat@val stored from wreg
  1787  00F89C  6E02               	movwf	lcd_dat@val^0,c
  1788  00F89E                     
  1789                           ;main.c: 122: void lcd_dat(unsigned char val);main.c: 123: {;main.c: 124:  PORTEbits.RE1
      +                          =1;
  1790  00F89E  8284               	bsf	132,1,c	;volatile
  1791  00F8A0                     
  1792                           ;main.c: 125:         lcd_wr(val);
  1793  00F8A0  5002               	movf	lcd_dat@val^0,w,c
  1794  00F8A2  EC41  F07C         	call	_lcd_wr
  1795  00F8A6                     
  1796                           ;main.c: 126:         PORTEbits.RE2=1;
  1797  00F8A6  8484               	bsf	132,2,c	;volatile
  1798  00F8A8                     
  1799                           ;main.c: 128:         PORTEbits.RE1=0;
  1800  00F8A8  9284               	bcf	132,1,c	;volatile
  1801  00F8AA                     
  1802                           ;main.c: 130:  PORTEbits.RE1=1;
  1803  00F8AA  8284               	bsf	132,1,c	;volatile
  1804  00F8AC  0012               	return		;funcret
  1805  00F8AE                     __end_of_lcd_dat:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _lcd_cmd *****************
  1809 ;; Defined at:
  1810 ;;		line 111 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  val             1    wreg     unsigned char 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  val             1    1[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;Total ram usage:        1 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 1
  1831 ;; This function calls:
  1832 ;;		_lcd_wr
  1833 ;; This function is called by:
  1834 ;;		_lcd_init
  1835 ;;		_lcd_custom_char
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text6
  1841  00F88A                     __ptext6:
  1842                           	callstack 0
  1843  00F88A                     _lcd_cmd:
  1844                           	callstack 28
  1845                           
  1846                           ;incstack = 0
  1847                           ;lcd_cmd@val stored from wreg
  1848  00F88A  6E02               	movwf	lcd_cmd@val^0,c
  1849  00F88C                     
  1850                           ;main.c: 111: void lcd_cmd(unsigned char val);main.c: 112: {;main.c: 113:  PORTEbits.RE1
      +                          =1;
  1851  00F88C  8284               	bsf	132,1,c	;volatile
  1852  00F88E                     
  1853                           ;main.c: 114:         lcd_wr(val);
  1854  00F88E  5002               	movf	lcd_cmd@val^0,w,c
  1855  00F890  EC41  F07C         	call	_lcd_wr
  1856  00F894                     
  1857                           ;main.c: 115:         PORTEbits.RE2=0;
  1858  00F894  9484               	bcf	132,2,c	;volatile
  1859  00F896                     
  1860                           ;main.c: 117:         PORTEbits.RE1=0;
  1861  00F896  9284               	bcf	132,1,c	;volatile
  1862  00F898                     
  1863                           ;main.c: 119:  PORTEbits.RE1=1;
  1864  00F898  8284               	bsf	132,1,c	;volatile
  1865  00F89A  0012               	return		;funcret
  1866  00F89C                     __end_of_lcd_cmd:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _lcd_wr *****************
  1870 ;; Defined at:
  1871 ;;		line 106 in file "main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  val             1    wreg     unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  val             1    0[COMRAM] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;Total ram usage:        1 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_lcd_cmd
  1895 ;;		_lcd_dat
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text7
  1900  00F882                     __ptext7:
  1901                           	callstack 0
  1902  00F882                     _lcd_wr:
  1903                           	callstack 28
  1904                           
  1905                           ;incstack = 0
  1906                           ;lcd_wr@val stored from wreg
  1907  00F882  6E01               	movwf	lcd_wr@val^0,c
  1908  00F884                     
  1909                           ;main.c: 106: void lcd_wr(unsigned char val);main.c: 107: {;main.c: 108:   PORTD=val;
  1910  00F884  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  1911  00F888  0012               	return		;funcret
  1912  00F88A                     __end_of_lcd_wr:
  1913                           	callstack 0
  1914                           
  1915                           	psect	rparam
  1916  0000                     
  1917                           	psect	idloc
  1918                           
  1919                           ;Config register IDLOC0 @ 0x200000
  1920                           ;	unspecified, using default values
  1921  200000                     	org	2097152
  1922  200000  FF                 	db	255
  1923                           
  1924                           ;Config register IDLOC1 @ 0x200001
  1925                           ;	unspecified, using default values
  1926  200001                     	org	2097153
  1927  200001  FF                 	db	255
  1928                           
  1929                           ;Config register IDLOC2 @ 0x200002
  1930                           ;	unspecified, using default values
  1931  200002                     	org	2097154
  1932  200002  FF                 	db	255
  1933                           
  1934                           ;Config register IDLOC3 @ 0x200003
  1935                           ;	unspecified, using default values
  1936  200003                     	org	2097155
  1937  200003  FF                 	db	255
  1938                           
  1939                           ;Config register IDLOC4 @ 0x200004
  1940                           ;	unspecified, using default values
  1941  200004                     	org	2097156
  1942  200004  FF                 	db	255
  1943                           
  1944                           ;Config register IDLOC5 @ 0x200005
  1945                           ;	unspecified, using default values
  1946  200005                     	org	2097157
  1947  200005  FF                 	db	255
  1948                           
  1949                           ;Config register IDLOC6 @ 0x200006
  1950                           ;	unspecified, using default values
  1951  200006                     	org	2097158
  1952  200006  FF                 	db	255
  1953                           
  1954                           ;Config register IDLOC7 @ 0x200007
  1955                           ;	unspecified, using default values
  1956  200007                     	org	2097159
  1957  200007  FF                 	db	255
  1958                           
  1959                           	psect	config
  1960                           
  1961                           ; Padding undefined space
  1962  300000                     	org	3145728
  1963  300000  FF                 	db	255
  1964                           
  1965                           ;Config register CONFIG1H @ 0x300001
  1966                           ;	Oscillator Selection bits
  1967                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  1968                           ;	Fail-Safe Clock Monitor Enable bit
  1969                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1970                           ;	Internal/External Oscillator Switchover bit
  1971                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1972  300001                     	org	3145729
  1973  300001  06                 	db	6
  1974                           
  1975                           ;Config register CONFIG2L @ 0x300002
  1976                           ;	Power-up Timer Enable bit
  1977                           ;	PWRT = ON, PWRT enabled
  1978                           ;	Brown-out Reset Enable bits
  1979                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1980                           ;	Brown Out Reset Voltage bits
  1981                           ;	BORV = 3, Minimum setting
  1982  300002                     	org	3145730
  1983  300002  18                 	db	24
  1984                           
  1985                           ;Config register CONFIG2H @ 0x300003
  1986                           ;	Watchdog Timer Enable bit
  1987                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1988                           ;	Watchdog Timer Postscale Select bits
  1989                           ;	WDTPS = 32768, 1:32768
  1990  300003                     	org	3145731
  1991  300003  1E                 	db	30
  1992                           
  1993                           ; Padding undefined space
  1994  300004                     	org	3145732
  1995  300004  FF                 	db	255
  1996                           
  1997                           ;Config register CONFIG3H @ 0x300005
  1998                           ;	CCP2 MUX bit
  1999                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2000                           ;	PORTB A/D Enable bit
  2001                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2002                           ;	Low-Power Timer1 Oscillator Enable bit
  2003                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2004                           ;	MCLR Pin Enable bit
  2005                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2006  300005                     	org	3145733
  2007  300005  81                 	db	129
  2008                           
  2009                           ;Config register CONFIG4L @ 0x300006
  2010                           ;	Stack Full/Underflow Reset Enable bit
  2011                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2012                           ;	Single-Supply ICSP Enable bit
  2013                           ;	LVP = OFF, Single-Supply ICSP disabled
  2014                           ;	Extended Instruction Set Enable bit
  2015                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2016                           ;	Background Debugger Enable bit
  2017                           ;	DEBUG = 0x1, unprogrammed default
  2018  300006                     	org	3145734
  2019  300006  80                 	db	128
  2020                           
  2021                           ; Padding undefined space
  2022  300007                     	org	3145735
  2023  300007  FF                 	db	255
  2024                           
  2025                           ;Config register CONFIG5L @ 0x300008
  2026                           ;	Code Protection bit
  2027                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2028                           ;	Code Protection bit
  2029                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2030                           ;	Code Protection bit
  2031                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2032                           ;	Code Protection bit
  2033                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2034  300008                     	org	3145736
  2035  300008  0F                 	db	15
  2036                           
  2037                           ;Config register CONFIG5H @ 0x300009
  2038                           ;	Boot Block Code Protection bit
  2039                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2040                           ;	Data EEPROM Code Protection bit
  2041                           ;	CPD = OFF, Data EEPROM not code-protected
  2042  300009                     	org	3145737
  2043  300009  C0                 	db	192
  2044                           
  2045                           ;Config register CONFIG6L @ 0x30000A
  2046                           ;	Write Protection bit
  2047                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2048                           ;	Write Protection bit
  2049                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2050                           ;	Write Protection bit
  2051                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2052                           ;	Write Protection bit
  2053                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2054  30000A                     	org	3145738
  2055  30000A  0F                 	db	15
  2056                           
  2057                           ;Config register CONFIG6H @ 0x30000B
  2058                           ;	Configuration Register Write Protection bit
  2059                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2060                           ;	Boot Block Write Protection bit
  2061                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2062                           ;	Data EEPROM Write Protection bit
  2063                           ;	WRTD = OFF, Data EEPROM not write-protected
  2064  30000B                     	org	3145739
  2065  30000B  E0                 	db	224
  2066                           
  2067                           ;Config register CONFIG7L @ 0x30000C
  2068                           ;	Table Read Protection bit
  2069                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2070                           ;	Table Read Protection bit
  2071                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2072                           ;	Table Read Protection bit
  2073                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2074                           ;	Table Read Protection bit
  2075                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2076  30000C                     	org	3145740
  2077  30000C  0F                 	db	15
  2078                           
  2079                           ;Config register CONFIG7H @ 0x30000D
  2080                           ;	Boot Block Table Read Protection bit
  2081                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2082  30000D                     	org	3145741
  2083  30000D  40                 	db	64
  2084                           tosu	equ	0xFFF
  2085                           tosh	equ	0xFFE
  2086                           tosl	equ	0xFFD
  2087                           stkptr	equ	0xFFC
  2088                           pclatu	equ	0xFFB
  2089                           pclath	equ	0xFFA
  2090                           pcl	equ	0xFF9
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           indf0	equ	0xFEF
  2098                           postinc0	equ	0xFEE
  2099                           postdec0	equ	0xFED
  2100                           preinc0	equ	0xFEC
  2101                           plusw0	equ	0xFEB
  2102                           fsr0h	equ	0xFEA
  2103                           fsr0l	equ	0xFE9
  2104                           wreg	equ	0xFE8
  2105                           indf1	equ	0xFE7
  2106                           postinc1	equ	0xFE6
  2107                           postdec1	equ	0xFE5
  2108                           preinc1	equ	0xFE4
  2109                           plusw1	equ	0xFE3
  2110                           fsr1h	equ	0xFE2
  2111                           fsr1l	equ	0xFE1
  2112                           bsr	equ	0xFE0
  2113                           indf2	equ	0xFDF
  2114                           postinc2	equ	0xFDE
  2115                           postdec2	equ	0xFDD
  2116                           preinc2	equ	0xFDC
  2117                           plusw2	equ	0xFDB
  2118                           fsr2h	equ	0xFDA
  2119                           fsr2l	equ	0xFD9
  2120                           status	equ	0xFD8

Data Sizes:
    Strings     306
    Constant    0
    Data        48
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     55     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcd_custom_char@Pattern	PTR unsigned char  size(2) Largest target is 8
		 -> main@ciapki(COMRAM[8]), main@sad(COMRAM[8]), main@smile(COMRAM[8]), main@empty_bottle(COMRAM[8]), 
		 -> main@half_bottle(COMRAM[8]), main@full_bottle(COMRAM[8]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_lcd_custom_char
    _main->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_init->_delay
    _lcd_custom_char->_lcd_cmd
    _lcd_custom_char->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0    5422
                                              7 COMRAM    48    48      0
                              _delay
                            _lcd_cmd
                    _lcd_custom_char
                            _lcd_dat
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    1488
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1338
                              _delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2    1308
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcd_custom_char                                      5     2      3    1084
                                              2 COMRAM     5     2      3
                            _lcd_cmd
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _lcd_cmd
     _lcd_wr
   _lcd_custom_char
     _lcd_cmd
     _lcd_dat
       _lcd_wr
   _lcd_dat
   _lcd_init
     _delay
     _lcd_cmd
   _lcd_str
     _lcd_dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     37      67       1       81.1%
BITBIGSFRhh         3B      0       0      37        0.0%
BITBIGSFRlhh        29      0       0      38        0.0%
BITBIGSFRlhl         D      0       0      39        0.0%
BITBIGSFRll          3      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      26        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 10 11:04:42 2022

 lcd_custom_char@Pattern 0003  lcd_custom_char@Location 0005                       l33 F95A  
                     l50 F888                       l36 F990                       l53 F89A  
                     l70 F948                       l56 F8AC                       l65 F9E0  
                     l59 FA3C                      l800 F8A8                      l802 F8AA  
                    l766 F884                      l790 F896                      l792 F898  
                    l784 F88C                      l786 F88E                      l794 F89E  
                    l788 F894                      l796 F8A0                      l798 F8A6  
                    u120 F976                      u121 F972                      u201 FABA  
                    u130 F990                      u131 F98C                      u211 FACC  
                    u140 F9E0                      u141 F9DC                      u150 F948  
                    u151 F944                      u161 FA72                      u171 FA84  
                    u181 FA96                      u191 FAA8                      wreg 000FE8  
                   l1200 F92E                     l1202 F932                     l1210 FA68  
                   l1300 FC30                     l1220 FAC2                     l1212 FA7A  
                   l1204 FA3E                     l1150 F964                     l1142 F94A  
                   l1310 FC4E                     l1302 FC36                     l1230 FB14  
                   l1222 FAD4                     l1214 FA8C                     l1206 FA5E  
                   l1152 F966                     l1144 F956                     l1160 F9E6  
                   l1400 FD9E                     l1320 FC78                     l1312 FC5A  
                   l1304 FC3C                     l1240 FB4C                     l1232 FB24  
                   l1224 FAE4                     l1216 FA9E                     l1208 FA62  
                   l1154 F976                     l1170 FA18                     l1162 F9F2  
                   l1410 FDC2                     l1402 FDAA                     l1330 FC96  
                   l1322 FC7E                     l1314 FC60                     l1306 FC42  
                   l1250 FB70                     l1242 FB58                     l1234 FB34  
                   l1226 FAF4                     l1218 FAB0                     l1156 F97A  
                   l1180 FA36                     l1172 FA1E                     l1164 F9F4  
                   l1420 FDE6                     l1412 FDC8                     l1404 FDB0  
                   l1340 FCC0                     l1332 FCA2                     l1324 FC84  
                   l1316 FC66                     l1308 FC48                     l1260 FB94  
                   l1252 FB76                     l1244 FB5E                     l1236 FB40  
                   l1228 FB04                     l1190 F908                     l1174 FA24  
                   l1166 F9FA                     l1158 F9E2                     l1182 F992  
                   l1430 FE10                     l1422 FDF2                     l1414 FDCE  
                   l1406 FDB6                     l1350 FCDE                     l1342 FCC6  
                   l1334 FCA8                     l1326 FC8A                     l1318 FC72  
                   l1270 FBB8                     l1262 FBA0                     l1254 FB7C  
                   l1246 FB64                     l1238 FB46                     l1192 F914  
                   l1176 FA2A                     l1168 FA0C                     l1184 F99A  
                   l1440 FE34                     l1432 FE16                     l1424 FDF8  
                   l1416 FDDA                     l1408 FDBC                     l1360 FD08  
                   l1352 FCEA                     l1344 FCCC                     l1336 FCAE  
                   l1328 FC90                     l1280 FBDC                     l1272 FBBE  
                   l1264 FBA6                     l1256 FB88                     l1248 FB6A  
                   l1178 FA30                     l1186 F9B6                     l1450 FE5E  
                   l1442 FE40                     l1434 FE1C                     l1426 FE04  
                   l1418 FDE0                     l1370 FD26                     l1362 FD0E  
                   l1354 FCF0                     l1346 FCD2                     l1338 FCBA  
                   l1290 FC06                     l1282 FBE8                     l1274 FBC4  
                   l1266 FBAC                     l1258 FB8E                     l1188 F9B8  
                   l1460 FE82                     l1452 FE64                     l1444 FE46  
                   l1436 FE28                     l1428 FE0A                     l1380 FD50  
                   l1372 FD32                     l1364 FD14                     l1356 FCF6  
                   l1348 FCD8                     l1292 FC12                     l1284 FBEE  
                   l1276 FBD0                     l1268 FBB2                     l1198 F91C  
                   l1470 FEA6                     l1462 FE8E                     l1454 FE6A  
                   l1446 FE52                     l1438 FE2E                     l1390 FD74  
                   l1382 FD5C                     l1374 FD38                     l1366 FD1A  
                   l1358 FD02                     l1294 FC18                     l1286 FBFA  
                   l1278 FBD6                     l1472 FEAC                     l1464 FE94  
                   l1456 FE76                     l1448 FE58                     l1392 FD80  
                   l1384 FD62                     l1376 FD3E                     l1368 FD20  
                   l1296 FC1E                     l1288 FC00                     l1474 FEB8  
                   l1466 FE9A                     l1458 FE7C                     l1394 FD86  
                   l1386 FD68                     l1378 FD4A                     l1298 FC2A  
                   l1468 FEA0                     l1396 FD8C                     l1388 FD6E  
                   l1398 FD98                     STR_1 FF99                     STR_2 FF55  
                   STR_3 FFCC                     STR_4 FF22                     STR_5 FECD  
                   STR_6 FEEF                     STR_7 FF44                     STR_8 FF66  
                   STR_9 FF77                     _main FA3E                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000             ___param_bank 000000         lcd_custom_char@i 0006  
                  ?_main 0001                    STR_10 FEDE                    STR_11 FF88  
                  STR_12 FF00                    STR_13 FFDD                    STR_14 FF33  
                  STR_15 FFBB                    STR_16 FF11                    STR_17 FFAA  
                  STR_18 FFEE                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcd_dat F8AE          __end_of_lcd_cmd F89C  
        __end_of_lcd_str F9E2                    _delay F94A                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
        __initialization F8AE             __end_of_main FECC                   ??_main 0008  
          __activetblptr 000002                   ?_delay 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         __end_of_lcd_init FA3E                   _lcd_wr F882  
                 delay@i 0003                   delay@j 0005                   isa$std 000001  
              ??_lcd_dat 0002                ??_lcd_cmd 0002                ??_lcd_str 0005  
           __pdataCOMRAM 0038             __mediumconst FECC                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization F8CE            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_delay F992                  ??_delay 0003                  ?_lcd_wr 0001  
              ?_lcd_init 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit F8AE                  __ramtop 1000                  __ptext0 FA3E  
                __ptext1 F992                  __ptext2 F9E2                  __ptext3 F94A  
                __ptext4 F908                  __ptext5 F89C                  __ptext6 F88A  
                __ptext7 F882                  _lcd_dat F89C                  _lcd_cmd F88A  
                _lcd_str F992                  delay@ms 0001                  main@sad 0028  
             ??_lcd_init 0006     end_of_initialization F8CE            __Lmediumconst FECC  
       main@empty_bottle 0018                  postdec1 000FE5                  postinc0 000FEE  
      ??_lcd_custom_char 0006                _PORTEbits 000F84               lcd_dat@val 0002  
             lcd_cmd@val 0002               main@ciapki 0030               lcd_str@str 0003  
          __pidataCOMRAM F8D8           __end_of_lcd_wr F88A      start_initialization F8AE  
               ??_lcd_wr 0001          main@half_bottle 0010            __pmediumconst FECC  
               ?_lcd_dat 0001                 ?_lcd_cmd 0001                 ?_lcd_str 0003  
        _lcd_custom_char F908                main@F2500 0048                main@F2502 0040  
              main@F2504 0038                main@F2494 0060                main@F2496 0058  
              main@F2498 0050               _ADCON0bits 000FC2                lcd_wr@val 0001  
        main@full_bottle 0008                main@smile 0020                copy_data0 F8C2  
               __Hrparam 0000                 __Lrparam 0000                 _lcd_init F9E2  
__end_of_lcd_custom_char F94A                 isa$xinst 000000                 lcd_str@i 0007  
       ?_lcd_custom_char 0003  
