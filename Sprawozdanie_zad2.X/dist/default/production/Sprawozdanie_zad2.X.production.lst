

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 09:22:28 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4620 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  00FD3A                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _turnedOn
    61  00FD3A  0001               	dw	1
    62                           
    63                           ;initializer for _direction
    64  00FD3C  0001               	dw	1
    65  0000                     _ADRESL	set	4035
    66  0000                     _ADRESH	set	4036
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _PORTBbits	set	3969
    69  0000                     _ADCON0	set	4034
    70  0000                     _PORTD	set	3971
    71  0000                     _TRISA	set	3986
    72  0000                     _ADCON2	set	4032
    73  0000                     _ADCON1	set	4033
    74  0000                     _TRISE	set	3990
    75  0000                     _TRISD	set	3989
    76  0000                     _TRISC	set	3988
    77  0000                     _TRISB	set	3987
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82  00FD3E                     __pcinit:
    83                           	callstack 0
    84  00FD3E                     start_initialization:
    85                           	callstack 0
    86  00FD3E                     __initialization:
    87                           	callstack 0
    88                           
    89                           ; Initialize objects allocated to COMRAM (4 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91  00FD3E  0E3A               	movlw	low __pidataCOMRAM
    92  00FD40  6EF6               	movwf	tblptrl,c
    93  00FD42  0EFD               	movlw	high __pidataCOMRAM
    94  00FD44  6EF7               	movwf	tblptrh,c
    95  00FD46  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96  00FD48  6EF8               	movwf	tblptru,c
    97  00FD4A  EE00  F00F         	lfsr	0,__pdataCOMRAM
    98  00FD4E  EE10 F004          	lfsr	1,4
    99  00FD52                     copy_data0:
   100  00FD52  0009               	tblrd		*+
   101  00FD54  CFF5 FFEE          	movff	tablat,postinc0
   102  00FD58  50E5               	movf	postdec1,w,c
   103  00FD5A  50E1               	movf	fsr1l,w,c
   104  00FD5C  E1FA               	bnz	copy_data0
   105                           
   106                           ; Clear objects allocated to COMRAM (2 bytes)
   107  00FD5E  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
   108  00FD60  6A13               	clrf	__pbssCOMRAM& (0+255),c
   109  00FD62                     end_of_initialization:
   110                           	callstack 0
   111  00FD62                     __end_of__initialization:
   112                           	callstack 0
   113  00FD62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   114  00FD64  6EF8               	movwf	tblptru,c
   115  00FD66  0100               	movlb	0
   116  00FD68  EF9B  F07F         	goto	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMRAM
   119  000013                     __pbssCOMRAM:
   120                           	callstack 0
   121  000013                     _isInformed:
   122                           	callstack 0
   123  000013                     	ds	2
   124                           
   125                           	psect	dataCOMRAM
   126  00000F                     __pdataCOMRAM:
   127                           	callstack 0
   128  00000F                     _turnedOn:
   129                           	callstack 0
   130  00000F                     	ds	2
   131  000011                     _direction:
   132                           	callstack 0
   133  000011                     	ds	2
   134                           
   135                           	psect	cstackCOMRAM
   136  000001                     __pcstackCOMRAM:
   137                           	callstack 0
   138  000001                     ?_adc:
   139                           	callstack 0
   140  000001                     delay@ms:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x0
   144  000001                     	ds	2
   145  000003                     ??_adc:
   146  000003                     delay@i:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x2
   150  000003                     	ds	2
   151  000005                     delay@j:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x4
   155  000005                     	ds	1
   156  000006                     alarm@i:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x5
   160  000006                     	ds	1
   161  000007                     adc@kanal:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x6
   165  000007                     	ds	1
   166  000008                     ?___lwdiv:
   167                           	callstack 0
   168  000008                     ___lwdiv@dividend:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x7
   172  000008                     	ds	2
   173  00000A                     ___lwdiv@divisor:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x9
   177  00000A                     	ds	2
   178  00000C                     ___lwdiv@quotient:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0xB
   182  00000C                     	ds	2
   183  00000E                     ___lwdiv@counter:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0xD
   187  00000E                     	ds	1
   188  00000F                     
   189                           ; 1 bytes @ 0xE
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 116 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   213 ;;Total ram usage:        0 bytes
   214 ;; Hardware stack levels required when called: 2
   215 ;; This function calls:
   216 ;;		___lwdiv
   217 ;;		_adc
   218 ;;		_alarm
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text0
   225  00FF36                     __ptext0:
   226                           	callstack 0
   227  00FF36                     _main:
   228                           	callstack 29
   229  00FF36                     
   230                           ;main.c: 119:     ADCON0=0x01;
   231  00FF36  0E01               	movlw	1
   232  00FF38  6EC2               	movwf	194,c	;volatile
   233                           
   234                           ;main.c: 120:     ADCON1=0x0B;
   235  00FF3A  0E0B               	movlw	11
   236  00FF3C  6EC1               	movwf	193,c	;volatile
   237                           
   238                           ;main.c: 121:     ADCON2=0x01;
   239  00FF3E  0E01               	movlw	1
   240  00FF40  6EC0               	movwf	192,c	;volatile
   241                           
   242                           ;main.c: 123:     TRISA=0xC3;
   243  00FF42  0EC3               	movlw	195
   244  00FF44  6E92               	movwf	146,c	;volatile
   245                           
   246                           ;main.c: 124:     TRISB=0x3F;
   247  00FF46  0E3F               	movlw	63
   248  00FF48  6E93               	movwf	147,c	;volatile
   249                           
   250                           ;main.c: 125:     TRISC=0x01;
   251  00FF4A  0E01               	movlw	1
   252  00FF4C  6E94               	movwf	148,c	;volatile
   253                           
   254                           ;main.c: 126:     TRISD=0x00;
   255  00FF4E  0E00               	movlw	0
   256  00FF50  6E95               	movwf	149,c	;volatile
   257                           
   258                           ;main.c: 127:     TRISE=0x00;
   259  00FF52  0E00               	movlw	0
   260  00FF54  6E96               	movwf	150,c	;volatile
   261  00FF56                     l935:
   262                           
   263                           ;main.c: 131:     {;main.c: 132:         if (PORTBbits.RB3 == 0) {
   264  00FF56  B681               	btfsc	129,3,c	;volatile
   265  00FF58  EFB0  F07F         	goto	u261
   266  00FF5C  EFB2  F07F         	goto	u260
   267  00FF60                     u261:
   268  00FF60  EFC5  F07F         	goto	l943
   269  00FF64                     u260:
   270  00FF64                     
   271                           ;main.c: 133:             if (turnedOn == 0){
   272  00FF64  500F               	movf	_turnedOn^0,w,c
   273  00FF66  1010               	iorwf	(_turnedOn+1)^0,w,c
   274  00FF68  A4D8               	btfss	status,2,c
   275  00FF6A  EFB9  F07F         	goto	u271
   276  00FF6E  EFBB  F07F         	goto	u270
   277  00FF72                     u271:
   278  00FF72  EFC1  F07F         	goto	l941
   279  00FF76                     u270:
   280  00FF76                     
   281                           ;main.c: 134:                 turnedOn = 1;
   282  00FF76  0E00               	movlw	0
   283  00FF78  6E10               	movwf	(_turnedOn+1)^0,c
   284  00FF7A  0E01               	movlw	1
   285  00FF7C  6E0F               	movwf	_turnedOn^0,c
   286                           
   287                           ;main.c: 135:             } else {
   288  00FF7E  EFC5  F07F         	goto	l943
   289  00FF82                     l941:
   290                           
   291                           ;main.c: 136:                 turnedOn = 0;
   292  00FF82  0E00               	movlw	0
   293  00FF84  6E10               	movwf	(_turnedOn+1)^0,c
   294  00FF86  0E00               	movlw	0
   295  00FF88  6E0F               	movwf	_turnedOn^0,c
   296  00FF8A                     l943:
   297                           
   298                           ;main.c: 139:         if (turnedOn == 1){
   299  00FF8A  040F               	decf	_turnedOn^0,w,c
   300  00FF8C  1010               	iorwf	(_turnedOn+1)^0,w,c
   301  00FF8E  A4D8               	btfss	status,2,c
   302  00FF90  EFCC  F07F         	goto	u281
   303  00FF94  EFCE  F07F         	goto	u280
   304  00FF98                     u281:
   305  00FF98  EFF6  F07F         	goto	l951
   306  00FF9C                     u280:
   307  00FF9C                     
   308                           ;main.c: 140:             if (((unsigned int)adc(0)/10) >= 51){
   309  00FF9C  0E00               	movlw	0
   310  00FF9E  EC53  F07F         	call	_adc
   311  00FFA2  C001  F008         	movff	?_adc,___lwdiv@dividend
   312  00FFA6  C002  F009         	movff	?_adc+1,___lwdiv@dividend+1
   313  00FFAA  0E00               	movlw	0
   314  00FFAC  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
   315  00FFAE  0E0A               	movlw	10
   316  00FFB0  6E0A               	movwf	___lwdiv@divisor^0,c
   317  00FFB2  ECDA  F07E         	call	___lwdiv	;wreg free
   318  00FFB6  5009               	movf	(?___lwdiv+1)^0,w,c
   319  00FFB8  E109               	bnz	u290
   320  00FFBA  0E33               	movlw	51
   321  00FFBC  5C08               	subwf	?___lwdiv^0,w,c
   322  00FFBE  A0D8               	btfss	status,0,c
   323  00FFC0  EFE4  F07F         	goto	u291
   324  00FFC4  EFE6  F07F         	goto	u290
   325  00FFC8                     u291:
   326  00FFC8  EFF6  F07F         	goto	l951
   327  00FFCC                     u290:
   328  00FFCC                     
   329                           ;main.c: 141:                 if (isInformed == 0){
   330  00FFCC  5013               	movf	_isInformed^0,w,c
   331  00FFCE  1014               	iorwf	(_isInformed+1)^0,w,c
   332  00FFD0  A4D8               	btfss	status,2,c
   333  00FFD2  EFED  F07F         	goto	u301
   334  00FFD6  EFEF  F07F         	goto	u300
   335  00FFDA                     u301:
   336  00FFDA  EFF3  F07F         	goto	l73
   337  00FFDE                     u300:
   338  00FFDE                     
   339                           ;main.c: 142:                     alarm();
   340  00FFDE  EC14  F07F         	call	_alarm	;wreg free
   341                           
   342                           ;main.c: 143:                 } else {
   343  00FFE2  EFAB  F07F         	goto	l935
   344  00FFE6                     l73:
   345                           
   346                           ;main.c: 144:                     PORTD = 255;
   347  00FFE6  6883               	setf	131,c	;volatile
   348  00FFE8  EFAB  F07F         	goto	l935
   349  00FFEC                     l951:
   350                           
   351                           ;main.c: 147:                 PORTD = 0;
   352  00FFEC  0E00               	movlw	0
   353  00FFEE  6E83               	movwf	131,c	;volatile
   354                           
   355                           ;main.c: 148:                 isInformed = 0;
   356  00FFF0  0E00               	movlw	0
   357  00FFF2  6E14               	movwf	(_isInformed+1)^0,c
   358  00FFF4  0E00               	movlw	0
   359  00FFF6  6E13               	movwf	_isInformed^0,c
   360  00FFF8  EFAB  F07F         	goto	l935
   361  00FFFC  EF00  F000         	goto	start
   362  010000                     __end_of_main:
   363                           	callstack 0
   364                           
   365 ;; *************** function _alarm *****************
   366 ;; Defined at:
   367 ;;		line 97 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  i               2    5[COMRAM] int 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; Hardware stack levels required when called: 1
   388 ;; This function calls:
   389 ;;		_delay
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text1
   396  00FE28                     __ptext1:
   397                           	callstack 0
   398  00FE28                     _alarm:
   399                           	callstack 29
   400  00FE28                     
   401                           ;main.c: 98:     int i = 0;
   402  00FE28  0E00               	movlw	0
   403  00FE2A  6E07               	movwf	(alarm@i+1)^0,c
   404  00FE2C  0E00               	movlw	0
   405  00FE2E  6E06               	movwf	alarm@i^0,c
   406                           
   407                           ;main.c: 99:     while (i < 10){
   408  00FE30  EF40  F07F         	goto	l907
   409  00FE34                     l57:
   410                           
   411                           ;main.c: 100:         if (PORTBbits.RB3 == 0) {
   412  00FE34  B681               	btfsc	129,3,c	;volatile
   413  00FE36  EF1F  F07F         	goto	u201
   414  00FE3A  EF21  F07F         	goto	u200
   415  00FE3E                     u201:
   416  00FE3E  EF2B  F07F         	goto	l897
   417  00FE42                     u200:
   418  00FE42                     
   419                           ;main.c: 101:             turnedOn = 0;
   420  00FE42  0E00               	movlw	0
   421  00FE44  6E10               	movwf	(_turnedOn+1)^0,c
   422  00FE46  0E00               	movlw	0
   423  00FE48  6E0F               	movwf	_turnedOn^0,c
   424                           
   425                           ;main.c: 102:             PORTD = 0;
   426  00FE4A  0E00               	movlw	0
   427  00FE4C  6E83               	movwf	131,c	;volatile
   428                           
   429                           ;main.c: 103:             i = 10;
   430  00FE4E  0E00               	movlw	0
   431  00FE50  6E07               	movwf	(alarm@i+1)^0,c
   432  00FE52  0E0A               	movlw	10
   433  00FE54  6E06               	movwf	alarm@i^0,c
   434  00FE56                     l897:
   435                           
   436                           ;main.c: 105:         if (i%2 != 0){
   437  00FE56  A006               	btfss	alarm@i^0,0,c
   438  00FE58  EF30  F07F         	goto	u211
   439  00FE5C  EF32  F07F         	goto	u210
   440  00FE60                     u211:
   441  00FE60  EF36  F07F         	goto	l901
   442  00FE64                     u210:
   443  00FE64                     
   444                           ;main.c: 106:             PORTD = 1;
   445  00FE64  0E01               	movlw	1
   446  00FE66  6E83               	movwf	131,c	;volatile
   447                           
   448                           ;main.c: 107:         } else {
   449  00FE68  EF38  F07F         	goto	l903
   450  00FE6C                     l901:
   451                           
   452                           ;main.c: 108:             PORTD = 0;
   453  00FE6C  0E00               	movlw	0
   454  00FE6E  6E83               	movwf	131,c	;volatile
   455  00FE70                     l903:
   456                           
   457                           ;main.c: 110:         delay(500);
   458  00FE70  0E01               	movlw	1
   459  00FE72  6E02               	movwf	(delay@ms+1)^0,c
   460  00FE74  0EF4               	movlw	244
   461  00FE76  6E01               	movwf	delay@ms^0,c
   462  00FE78  ECB6  F07E         	call	_delay	;wreg free
   463  00FE7C                     
   464                           ;main.c: 111:         i++;
   465  00FE7C  4A06               	infsnz	alarm@i^0,f,c
   466  00FE7E  2A07               	incf	(alarm@i+1)^0,f,c
   467  00FE80                     l907:
   468                           
   469                           ;main.c: 99:     while (i < 10){
   470  00FE80  BE07               	btfsc	(alarm@i+1)^0,7,c
   471  00FE82  EF4C  F07F         	goto	u221
   472  00FE86  5007               	movf	(alarm@i+1)^0,w,c
   473  00FE88  E109               	bnz	u220
   474  00FE8A  0E0A               	movlw	10
   475  00FE8C  5C06               	subwf	alarm@i^0,w,c
   476  00FE8E  A0D8               	btfss	status,0,c
   477  00FE90  EF4C  F07F         	goto	u221
   478  00FE94  EF4E  F07F         	goto	u220
   479  00FE98                     u221:
   480  00FE98  EF1A  F07F         	goto	l57
   481  00FE9C                     u220:
   482  00FE9C                     
   483                           ;main.c: 113:     isInformed = 1;
   484  00FE9C  0E00               	movlw	0
   485  00FE9E  6E14               	movwf	(_isInformed+1)^0,c
   486  00FEA0  0E01               	movlw	1
   487  00FEA2  6E13               	movwf	_isInformed^0,c
   488  00FEA4  0012               	return		;funcret
   489  00FEA6                     __end_of_alarm:
   490                           	callstack 0
   491                           
   492 ;; *************** function _delay *****************
   493 ;; Defined at:
   494 ;;		line 60 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  ms              2    0[COMRAM] unsigned int 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  i               2    2[COMRAM] unsigned int 
   499 ;;  j               1    4[COMRAM] unsigned char 
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;Total ram usage:        5 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_alarm
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text2
   523  00FD6C                     __ptext2:
   524                           	callstack 0
   525  00FD6C                     _delay:
   526                           	callstack 29
   527  00FD6C                     
   528                           ;main.c: 60: void delay(unsigned int ms);main.c: 61: {;main.c: 62:     unsigned int i;;m
      +                          ain.c: 63:     unsigned char j;;main.c: 65:  for (i =0; i< ms; i++)
   529  00FD6C  0E00               	movlw	0
   530  00FD6E  6E04               	movwf	(delay@i+1)^0,c
   531  00FD70  0E00               	movlw	0
   532  00FD72  6E03               	movwf	delay@i^0,c
   533  00FD74  EFCE  F07E         	goto	l871
   534  00FD78                     l859:
   535                           
   536                           ;main.c: 66:  {;main.c: 68:   for (j =0 ; j < 200; j++)
   537  00FD78  0E00               	movlw	0
   538  00FD7A  6E05               	movwf	delay@j^0,c
   539  00FD7C                     l35:
   540                           
   541                           ;main.c: 69:    {;main.c: 70:       __nop();
   542  00FD7C  F000               	nop	
   543                           
   544                           ;main.c: 71:       __nop();
   545  00FD7E  F000               	nop	
   546                           
   547                           ;main.c: 72:       __nop();
   548  00FD80  F000               	nop	
   549                           
   550                           ;main.c: 73:       __nop();
   551  00FD82  F000               	nop	
   552                           
   553                           ;main.c: 74:       __nop();
   554  00FD84  F000               	nop	
   555  00FD86                     
   556                           ;main.c: 75:    }
   557  00FD86  2A05               	incf	delay@j^0,f,c
   558  00FD88  0EC7               	movlw	199
   559  00FD8A  6405               	cpfsgt	delay@j^0,c
   560  00FD8C  EFCA  F07E         	goto	u161
   561  00FD90  EFCC  F07E         	goto	u160
   562  00FD94                     u161:
   563  00FD94  EFBE  F07E         	goto	l35
   564  00FD98                     u160:
   565  00FD98                     
   566                           ;main.c: 76:  }
   567  00FD98  4A03               	infsnz	delay@i^0,f,c
   568  00FD9A  2A04               	incf	(delay@i+1)^0,f,c
   569  00FD9C                     l871:
   570  00FD9C  5001               	movf	delay@ms^0,w,c
   571  00FD9E  5C03               	subwf	delay@i^0,w,c
   572  00FDA0  5002               	movf	(delay@ms+1)^0,w,c
   573  00FDA2  5804               	subwfb	(delay@i+1)^0,w,c
   574  00FDA4  A0D8               	btfss	status,0,c
   575  00FDA6  EFD7  F07E         	goto	u171
   576  00FDAA  EFD9  F07E         	goto	u170
   577  00FDAE                     u171:
   578  00FDAE  EFBC  F07E         	goto	l859
   579  00FDB2                     u170:
   580  00FDB2  0012               	return		;funcret
   581  00FDB4                     __end_of_delay:
   582                           	callstack 0
   583                           
   584 ;; *************** function _adc *****************
   585 ;; Defined at:
   586 ;;		line 79 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  kanal           1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  kanal           1    6[COMRAM] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  2    0[COMRAM] unsigned int 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;Total ram usage:        7 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text3
   614  00FEA6                     __ptext3:
   615                           	callstack 0
   616  00FEA6                     _adc:
   617                           	callstack 30
   618                           
   619                           ;incstack = 0
   620                           ;adc@kanal stored from wreg
   621  00FEA6  6E07               	movwf	adc@kanal^0,c
   622  00FEA8                     
   623                           ;main.c: 79: unsigned int adc(unsigned char kanal);main.c: 80: {;main.c: 81:     switch(
      +                          kanal)
   624  00FEA8  EF62  F07F         	goto	l883
   625  00FEAC                     l875:
   626  00FEAC  0E01               	movlw	1
   627  00FEAE  6EC2               	movwf	194,c	;volatile
   628  00FEB0  EF7B  F07F         	goto	l43
   629  00FEB4                     l877:
   630  00FEB4  0E05               	movlw	5
   631  00FEB6  6EC2               	movwf	194,c	;volatile
   632  00FEB8  EF7B  F07F         	goto	l43
   633  00FEBC                     l879:
   634  00FEBC  0E09               	movlw	9
   635  00FEBE  6EC2               	movwf	194,c	;volatile
   636  00FEC0  EF7B  F07F         	goto	l43
   637  00FEC4                     l883:
   638  00FEC4  5007               	movf	adc@kanal^0,w,c
   639  00FEC6  6E03               	movwf	??_adc^0,c
   640  00FEC8  6A04               	clrf	(??_adc+1)^0,c
   641                           
   642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   643                           ; Switch size 1, requested type "simple"
   644                           ; Number of cases is 1, Range of values is 0 to 0
   645                           ; switch strategies available:
   646                           ; Name         Instructions Cycles
   647                           ; simple_byte            4     3 (average)
   648                           ;	Chosen strategy is simple_byte
   649  00FECA  5004               	movf	(??_adc+1)^0,w,c
   650  00FECC  0A00               	xorlw	0	; case 0
   651  00FECE  B4D8               	btfsc	status,2,c
   652  00FED0  EF6C  F07F         	goto	l959
   653  00FED4  EF7B  F07F         	goto	l43
   654  00FED8                     l959:
   655                           
   656                           ; Switch size 1, requested type "simple"
   657                           ; Number of cases is 3, Range of values is 0 to 2
   658                           ; switch strategies available:
   659                           ; Name         Instructions Cycles
   660                           ; simple_byte           10     6 (average)
   661                           ;	Chosen strategy is simple_byte
   662  00FED8  5003               	movf	??_adc^0,w,c
   663  00FEDA  0A00               	xorlw	0	; case 0
   664  00FEDC  B4D8               	btfsc	status,2,c
   665  00FEDE  EF56  F07F         	goto	l875
   666  00FEE2  0A01               	xorlw	1	; case 1
   667  00FEE4  B4D8               	btfsc	status,2,c
   668  00FEE6  EF5A  F07F         	goto	l877
   669  00FEEA  0A03               	xorlw	3	; case 2
   670  00FEEC  B4D8               	btfsc	status,2,c
   671  00FEEE  EF5E  F07F         	goto	l879
   672  00FEF2  EF7B  F07F         	goto	l43
   673  00FEF6                     l43:
   674                           
   675                           ;main.c: 88:     ADCON0bits.GO=1;
   676  00FEF6  82C2               	bsf	194,1,c	;volatile
   677  00FEF8                     l46:
   678  00FEF8  B2C2               	btfsc	194,1,c	;volatile
   679  00FEFA  EF81  F07F         	goto	u181
   680  00FEFE  EF83  F07F         	goto	u180
   681  00FF02                     u181:
   682  00FF02  EF7C  F07F         	goto	l46
   683  00FF06                     u180:
   684  00FF06                     
   685                           ;main.c: 91:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
   686  00FF06  CFC3 F003          	movff	4035,??_adc	;volatile
   687  00FF0A  0E06               	movlw	6
   688  00FF0C  6E04               	movwf	(??_adc+1)^0,c
   689  00FF0E                     u195:
   690  00FF0E  90D8               	bcf	status,0,c
   691  00FF10  3203               	rrcf	??_adc^0,f,c
   692  00FF12  2E04               	decfsz	(??_adc+1)^0,f,c
   693  00FF14  EF87  F07F         	goto	u195
   694  00FF18  5003               	movf	??_adc^0,w,c
   695  00FF1A  CFC4 F005          	movff	4036,??_adc+2	;volatile
   696  00FF1E  6A06               	clrf	(??_adc+3)^0,c
   697  00FF20  90D8               	bcf	status,0,c
   698  00FF22  3605               	rlcf	(??_adc+2)^0,f,c
   699  00FF24  3606               	rlcf	(??_adc+3)^0,f,c
   700  00FF26  90D8               	bcf	status,0,c
   701  00FF28  3605               	rlcf	(??_adc+2)^0,f,c
   702  00FF2A  3606               	rlcf	(??_adc+3)^0,f,c
   703  00FF2C  1005               	iorwf	(??_adc+2)^0,w,c
   704  00FF2E  6E01               	movwf	?_adc^0,c
   705  00FF30  5006               	movf	(??_adc+3)^0,w,c
   706  00FF32  6E02               	movwf	(?_adc+1)^0,c
   707  00FF34  0012               	return		;funcret
   708  00FF36                     __end_of_adc:
   709                           	callstack 0
   710                           
   711 ;; *************** function ___lwdiv *****************
   712 ;; Defined at:
   713 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  dividend        2    7[COMRAM] unsigned int 
   716 ;;  divisor         2    9[COMRAM] unsigned int 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  quotient        2   11[COMRAM] unsigned int 
   719 ;;  counter         1   13[COMRAM] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  2    7[COMRAM] unsigned int 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;Total ram usage:        7 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text4
   743  00FDB4                     __ptext4:
   744                           	callstack 0
   745  00FDB4                     ___lwdiv:
   746                           	callstack 30
   747  00FDB4  0E00               	movlw	0
   748  00FDB6  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
   749  00FDB8  0E00               	movlw	0
   750  00FDBA  6E0C               	movwf	___lwdiv@quotient^0,c
   751  00FDBC  500A               	movf	___lwdiv@divisor^0,w,c
   752  00FDBE  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
   753  00FDC0  B4D8               	btfsc	status,2,c
   754  00FDC2  EFE5  F07E         	goto	u231
   755  00FDC6  EFE7  F07E         	goto	u230
   756  00FDCA                     u231:
   757  00FDCA  EF0F  F07F         	goto	l573
   758  00FDCE                     u230:
   759  00FDCE  0E01               	movlw	1
   760  00FDD0  6E0E               	movwf	___lwdiv@counter^0,c
   761  00FDD2  EFEF  F07E         	goto	l919
   762  00FDD6                     l917:
   763  00FDD6  90D8               	bcf	status,0,c
   764  00FDD8  360A               	rlcf	___lwdiv@divisor^0,f,c
   765  00FDDA  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
   766  00FDDC  2A0E               	incf	___lwdiv@counter^0,f,c
   767  00FDDE                     l919:
   768  00FDDE  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
   769  00FDE0  EFF4  F07E         	goto	u241
   770  00FDE4  EFF6  F07E         	goto	u240
   771  00FDE8                     u241:
   772  00FDE8  EFEB  F07E         	goto	l917
   773  00FDEC                     u240:
   774  00FDEC                     l921:
   775  00FDEC  90D8               	bcf	status,0,c
   776  00FDEE  360C               	rlcf	___lwdiv@quotient^0,f,c
   777  00FDF0  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
   778  00FDF2  500A               	movf	___lwdiv@divisor^0,w,c
   779  00FDF4  5C08               	subwf	___lwdiv@dividend^0,w,c
   780  00FDF6  500B               	movf	(___lwdiv@divisor+1)^0,w,c
   781  00FDF8  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
   782  00FDFA  A0D8               	btfss	status,0,c
   783  00FDFC  EF02  F07F         	goto	u251
   784  00FE00  EF04  F07F         	goto	u250
   785  00FE04                     u251:
   786  00FE04  EF09  F07F         	goto	l929
   787  00FE08                     u250:
   788  00FE08  500A               	movf	___lwdiv@divisor^0,w,c
   789  00FE0A  5E08               	subwf	___lwdiv@dividend^0,f,c
   790  00FE0C  500B               	movf	(___lwdiv@divisor+1)^0,w,c
   791  00FE0E  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
   792  00FE10  800C               	bsf	___lwdiv@quotient^0,0,c
   793  00FE12                     l929:
   794  00FE12  90D8               	bcf	status,0,c
   795  00FE14  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
   796  00FE16  320A               	rrcf	___lwdiv@divisor^0,f,c
   797  00FE18  2E0E               	decfsz	___lwdiv@counter^0,f,c
   798  00FE1A  EFF6  F07E         	goto	l921
   799  00FE1E                     l573:
   800  00FE1E  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
   801  00FE22  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
   802  00FE26  0012               	return		;funcret
   803  00FE28                     __end_of___lwdiv:
   804                           	callstack 0
   805  0000                     
   806                           	psect	rparam
   807  0000                     
   808                           	psect	idloc
   809                           
   810                           ;Config register IDLOC0 @ 0x200000
   811                           ;	unspecified, using default values
   812  200000                     	org	2097152
   813  200000  FF                 	db	255
   814                           
   815                           ;Config register IDLOC1 @ 0x200001
   816                           ;	unspecified, using default values
   817  200001                     	org	2097153
   818  200001  FF                 	db	255
   819                           
   820                           ;Config register IDLOC2 @ 0x200002
   821                           ;	unspecified, using default values
   822  200002                     	org	2097154
   823  200002  FF                 	db	255
   824                           
   825                           ;Config register IDLOC3 @ 0x200003
   826                           ;	unspecified, using default values
   827  200003                     	org	2097155
   828  200003  FF                 	db	255
   829                           
   830                           ;Config register IDLOC4 @ 0x200004
   831                           ;	unspecified, using default values
   832  200004                     	org	2097156
   833  200004  FF                 	db	255
   834                           
   835                           ;Config register IDLOC5 @ 0x200005
   836                           ;	unspecified, using default values
   837  200005                     	org	2097157
   838  200005  FF                 	db	255
   839                           
   840                           ;Config register IDLOC6 @ 0x200006
   841                           ;	unspecified, using default values
   842  200006                     	org	2097158
   843  200006  FF                 	db	255
   844                           
   845                           ;Config register IDLOC7 @ 0x200007
   846                           ;	unspecified, using default values
   847  200007                     	org	2097159
   848  200007  FF                 	db	255
   849                           
   850                           	psect	config
   851                           
   852                           ; Padding undefined space
   853  300000                     	org	3145728
   854  300000  FF                 	db	255
   855                           
   856                           ;Config register CONFIG1H @ 0x300001
   857                           ;	Oscillator Selection bits
   858                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
   859                           ;	Fail-Safe Clock Monitor Enable bit
   860                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   861                           ;	Internal/External Oscillator Switchover bit
   862                           ;	IESO = OFF, Oscillator Switchover mode disabled
   863  300001                     	org	3145729
   864  300001  06                 	db	6
   865                           
   866                           ;Config register CONFIG2L @ 0x300002
   867                           ;	Power-up Timer Enable bit
   868                           ;	PWRT = ON, PWRT enabled
   869                           ;	Brown-out Reset Enable bits
   870                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   871                           ;	Brown Out Reset Voltage bits
   872                           ;	BORV = 3, Minimum setting
   873  300002                     	org	3145730
   874  300002  18                 	db	24
   875                           
   876                           ;Config register CONFIG2H @ 0x300003
   877                           ;	Watchdog Timer Enable bit
   878                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   879                           ;	Watchdog Timer Postscale Select bits
   880                           ;	WDTPS = 32768, 1:32768
   881  300003                     	org	3145731
   882  300003  1E                 	db	30
   883                           
   884                           ; Padding undefined space
   885  300004                     	org	3145732
   886  300004  FF                 	db	255
   887                           
   888                           ;Config register CONFIG3H @ 0x300005
   889                           ;	CCP2 MUX bit
   890                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   891                           ;	PORTB A/D Enable bit
   892                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   893                           ;	Low-Power Timer1 Oscillator Enable bit
   894                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   895                           ;	MCLR Pin Enable bit
   896                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   897  300005                     	org	3145733
   898  300005  81                 	db	129
   899                           
   900                           ;Config register CONFIG4L @ 0x300006
   901                           ;	Stack Full/Underflow Reset Enable bit
   902                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   903                           ;	Single-Supply ICSP Enable bit
   904                           ;	LVP = OFF, Single-Supply ICSP disabled
   905                           ;	Extended Instruction Set Enable bit
   906                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   907                           ;	Background Debugger Enable bit
   908                           ;	DEBUG = 0x1, unprogrammed default
   909  300006                     	org	3145734
   910  300006  80                 	db	128
   911                           
   912                           ; Padding undefined space
   913  300007                     	org	3145735
   914  300007  FF                 	db	255
   915                           
   916                           ;Config register CONFIG5L @ 0x300008
   917                           ;	Code Protection bit
   918                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   919                           ;	Code Protection bit
   920                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   921                           ;	Code Protection bit
   922                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   923                           ;	Code Protection bit
   924                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   925  300008                     	org	3145736
   926  300008  0F                 	db	15
   927                           
   928                           ;Config register CONFIG5H @ 0x300009
   929                           ;	Boot Block Code Protection bit
   930                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   931                           ;	Data EEPROM Code Protection bit
   932                           ;	CPD = OFF, Data EEPROM not code-protected
   933  300009                     	org	3145737
   934  300009  C0                 	db	192
   935                           
   936                           ;Config register CONFIG6L @ 0x30000A
   937                           ;	Write Protection bit
   938                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   939                           ;	Write Protection bit
   940                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   941                           ;	Write Protection bit
   942                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   943                           ;	Write Protection bit
   944                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   945  30000A                     	org	3145738
   946  30000A  0F                 	db	15
   947                           
   948                           ;Config register CONFIG6H @ 0x30000B
   949                           ;	Configuration Register Write Protection bit
   950                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   951                           ;	Boot Block Write Protection bit
   952                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   953                           ;	Data EEPROM Write Protection bit
   954                           ;	WRTD = OFF, Data EEPROM not write-protected
   955  30000B                     	org	3145739
   956  30000B  E0                 	db	224
   957                           
   958                           ;Config register CONFIG7L @ 0x30000C
   959                           ;	Table Read Protection bit
   960                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   961                           ;	Table Read Protection bit
   962                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   963                           ;	Table Read Protection bit
   964                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   965                           ;	Table Read Protection bit
   966                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   967  30000C                     	org	3145740
   968  30000C  0F                 	db	15
   969                           
   970                           ;Config register CONFIG7H @ 0x30000D
   971                           ;	Boot Block Table Read Protection bit
   972                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   973  30000D                     	org	3145741
   974  30000D  40                 	db	64
   975                           tosu	equ	0xFFF
   976                           tosh	equ	0xFFE
   977                           tosl	equ	0xFFD
   978                           stkptr	equ	0xFFC
   979                           pclatu	equ	0xFFB
   980                           pclath	equ	0xFFA
   981                           pcl	equ	0xFF9
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           indf0	equ	0xFEF
   989                           postinc0	equ	0xFEE
   990                           postdec0	equ	0xFED
   991                           preinc0	equ	0xFEC
   992                           plusw0	equ	0xFEB
   993                           fsr0h	equ	0xFEA
   994                           fsr0l	equ	0xFE9
   995                           wreg	equ	0xFE8
   996                           indf1	equ	0xFE7
   997                           postinc1	equ	0xFE6
   998                           postdec1	equ	0xFE5
   999                           preinc1	equ	0xFE4
  1000                           plusw1	equ	0xFE3
  1001                           fsr1h	equ	0xFE2
  1002                           fsr1l	equ	0xFE1
  1003                           bsr	equ	0xFE0
  1004                           indf2	equ	0xFDF
  1005                           postinc2	equ	0xFDE
  1006                           postdec2	equ	0xFDD
  1007                           preinc2	equ	0xFDC
  1008                           plusw2	equ	0xFDB
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      20
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lwdiv
    _alarm->_delay
    ___lwdiv->_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     551
                            ___lwdiv
                                _adc
                              _alarm
 ---------------------------------------------------------------------------------
 (1) _alarm                                                2     2      0     215
                                              5 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc                                                  7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              7 COMRAM     7     3      4
                                _adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     _adc (ARG)
   _adc
   _alarm
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      42        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      E      14       1       15.7%
BITBIGSFRhh         3B      0       0      36        0.0%
BITBIGSFRlhhh       29      0       0      37        0.0%
BITBIGSFRlhhl        E      0       0      38        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BITBIGSFRll          1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      41        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 09:22:28 2022

                     l43 FEF6                       l35 FD7C                       l46 FEF8  
                     l38 FDB2                       l62 FEA4                       l49 FF34  
                     l57 FE34                       l73 FFE6                      l580 FE26  
                    l573 FE1E                      l901 FE6C                      l911 FDB4  
                    l903 FE70                      l921 FDEC                      l913 FDBC  
                    l905 FE7C                      l931 FE18                      l923 FDF2  
                    l915 FDCE                      l907 FE80                      l925 FE08  
                    l917 FDD6                      l909 FE9C                      l941 FF82  
                    l933 FF36                      l927 FE10                      l919 FDDE  
                    l871 FD9C                      l951 FFEC                      l943 FF8A  
                    l935 FF56                      l929 FE12                      l873 FEA8  
                    l865 FD86                      l857 FD6C                      l945 FF9C  
                    l937 FF64                      l875 FEAC                      l883 FEC4  
                    l867 FD88                      l859 FD78                      l947 FFCC  
                    l939 FF76                      l885 FF06                      l877 FEB4  
                    l869 FD98                      l893 FE28                      l949 FFDE  
                    l959 FED8                      l879 FEBC                      l895 FE42  
                    l897 FE56                      l899 FE64                      u200 FE42  
                    u201 FE3E                      u210 FE64                      u211 FE60  
                    u220 FE9C                      u300 FFDE                      u221 FE98  
                    u301 FFDA                      u230 FDCE                      u231 FDCA  
                    u240 FDEC                      u160 FD98                      u241 FDE8  
                    u161 FD94                      u250 FE08                      u170 FDB2  
                    u251 FE04                      u171 FDAE                      u180 FF06  
                    u260 FF64                      u181 FF02                      u261 FF60  
                    u270 FF76                      u271 FF72                      u280 FF9C  
                    u281 FF98                      u290 FFCC                      u195 FF0E  
                    u291 FFC8                      _adc FEA6                     ?_adc 0001  
                   _main FF36                     fsr1l 000FE1                     start 0000  
           ___param_bank 000000                    ??_adc 0003                    ?_main 0001  
        __end_of___lwdiv FE28                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _alarm FE28                    _delay FD6C  
                  tablat 000FF5                    status 000FD8          __initialization FD3E  
           __end_of_main 0000                   ??_main 000F            __activetblptr 000002  
                 ?_alarm 0001                   ?_delay 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                ??___lwdiv 000C                   alarm@i 0006  
                 delay@i 0003                   delay@j 0005                   isa$std 000001  
           __pdataCOMRAM 000F                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization FD62  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_alarm FEA6  
          __end_of_delay FDB4                  ??_alarm 0006                  ??_delay 0003  
             _isInformed 0013                  __Hparam 0000                  __Lparam 0000  
                ___lwdiv FDB4                  __pcinit FD3E                  __ramtop 1000  
                __ptext0 FF36                  __ptext1 FE28                  __ptext2 FD6C  
                __ptext3 FEA6                  __ptext4 FDB4                  delay@ms 0001  
   end_of_initialization FD62            __Lmediumconst 0000                  postdec1 000FE5  
                postinc0 000FEE                _PORTBbits 000F81            __pidataCOMRAM FD3A  
    start_initialization FD3E              __end_of_adc FF36              __pbssCOMRAM 0013  
       ___lwdiv@dividend 0008                 ?___lwdiv 0008                _direction 0011  
       ___lwdiv@quotient 000C               _ADCON0bits 000FC2                copy_data0 FD52  
               __Hrparam 0000                 __Lrparam 0000                 adc@kanal 0007  
        ___lwdiv@divisor 000A          ___lwdiv@counter 000E                 isa$xinst 000000  
               _turnedOn 000F  
